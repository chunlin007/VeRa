/*
 * Author: Chunlin Wang
 * Email: chunlin_wang01@163.com
 * Date: 2022-10-01
 * Description: Data table information help to construct database 
 * using for stm32f303xd/e
 * TODO extract register info using NLP technology
 */
#ifndef __DATA_TABLE__
#define __DATA_TABLE__

#include <stdint.h>
#define PERI_NUM 0x3f
#define REG_NUM 0x3ff
#define VALUE_NUM 0xff
/******************** TIM2/TIM3/TIM4 *********************/
//register information
#define base_tim2 0x40000000
#define base_tim3 0x40000400
#define base_tim4 0x40000800
const uint32_t arr1_tim2[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 1, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0xffffffff, 1, 0}, //0x2c
    {0x00000000, 0xf, 0}, //0x30
    {0x00000000, 1, 0}, //0x34
    {0x00000000, 1, 0}, //0x38
    {0x00000000, 1, 0}, //0x3c
    {0x00000000, 1, 0}, //0x40
    {0x00000000, 0xf, 0}, //0x44
    {0x00000000, 1, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_tim2[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000060, 0x00000080,
        0x00000300, 0x00000800
    },{ //0x04
        0x00000008,
        0x00000070, 0x00000080
    },{ //0x08
        0x00000007, 0x00000008,
        0x00000070, 0x00000080,
        0x00000f00,
        0x00003000, 0x00004000, 0x00008000,
        0x00010000
    },{ //0x0c
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000040,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
        0x00001000, 0x00002000, 0x00004000,
    },{ //0x10
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000040, 
        0x00000200, 0x00000400, 0x00000800,
        0x00001000
    },{ //0x14
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000040
    },{ //0x18
        0x00000003, 0x0000000c,
        0x000000f0,
        0x00000300, 0x00000c00,
        0x0000f000
    },{ //0x1c
        0x00000003, 0x0000000c,
        0x000000f0,
        0x00000300, 0x00000c00,
        0x0000f000
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004,
        0x00000010, 0x00000020, 0x00000080,
        0x00000100, 0x00000200, 0x00000800,
        0x00001000, 0x00002000, 0x00008000
    },{ //0x24
        0x0000ffff, 0x0fff0000, 0xf0000000
    },{ //0x28
        0x0000ffff
    },{ //0x2c
        0x0000ffff, 0xffff0000
    },{ //0x30
    },{ //0x34
        0x0000ffff, 0xffff0000
    },{ //0x38
        0x0000ffff, 0xffff0000
    },{ //0x3c
        0x0000ffff, 0xffff0000
    },{ //0x40
        0x0000ffff, 0xffff0000
    },{ //0x44
    },{ //0x48
        0x0000001f, 0x00001f00
    },{ //0x4c
        0x000000f, 0x000000f0, 0x00000f00, 0x0000f000
    },{	//end-sign
		0xfffffff, 0xffffffff
	}
};

/******************** TIM6/TIM7 *********************/
//register information
#define base_tim6 0x40001000
#define base_tim7 0x40001400
const uint32_t arr1_tim6[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 0xf, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 0xf, 0}, //0x18
    {0x00000000, 0xf, 0}, //0x1c
    {0x00000000, 0xf, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0xffffffff, 3, 0}, //0x2c
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_tim6[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000080,
        0x00000800
    },{ //0x04
        0x00000070
    },{ //0x08
    },{ //0x0c
        0x00000001, 
        0x00000100
    },{ //0x10
        0x00000001
    },{ //0x14
        0x00000001
    },{ //0x18
    },{ //0x1c
    },{ //0x20
    },{ //0x24
        0x0000ffff
    },{ //0x28
        0x0000ffff
    },{ //0x2c
        0x0000ffff
    },{ //end-sign
		0xffffffff,0xffffffff
	}
};


/******************** RTC *********************/
//register information
#define base_rtc 0x40028000
const uint32_t arr1_rtc[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00002101, 3, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000007, 2, 0}, //0x0c
    {0x007f00ff, 3, 0}, //0x10
    {0x0000ffff, 3, 0}, //0x14
    {0x00000000, 0xf, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 1, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x00000000, 1, 0}, //0x2c
    {0x00000000, 3, 0}, //0x30
    {0x00000000, 3, 0}, //0x34
    {0x00000000, 3, 0}, //0x38
    {0x00000000, 3, 0}, //0x3c
    {0x00000000, 1, 0}, //0x40
    {0x00000000, 3, 0}, //0x44
    {0x00000000, 3, 0}, //0x48
	/* 
	 * 0x50-0x8c rtc-backup register 
	 * here we just don't consider it.
	 */
	//[0x14 ... 0x23] = {0x00000000, 3, 0},
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_rtc[0x3ff][32] = {

    {   //0x00
		0x0000000f,
		0x00000070, 
		0x00000f00,
		0x00007000,
		0x000f0000,
		0x00300000, 0x00400000
    },{ //0x04
        0x0000000f,
        0x00000030, 
		0x00000f00,
		0x00001000, 0x0000e000,
		0x000f0000,
		0x00f00000
    },{ //0x08
        0x00000007, 0x00000008,
        0x00000001, 0x00000020, 0x00000040,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
        0x00001000, 0x00002000, 0x00004000, 0x00008000,
        0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00600000, 0x00800000
    },{ //0x0c
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
        0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000
    },{ //0x10
		0x00007fff, 0x003f8000
    },{ //0x14
		0x0000ffff
    },{ //0x18
    },{ //0x1c
		0x0000000f, 
		0x00000070, 0x00000080, 
		0x00000f00,
		0x00007000, 0x00008000,
		0x000f0000,
		0x00300000, 0x00400000, 0x00800000,
		0x0f000000,
		0x30000000, 0x40000000, 0x80000000
    },{ //0x20
		0x0000000f,
		0x00000070, 0x00000080,
		0x00000f00,
		0x00007000, 0x00008000,
		0x000f0000, 
		0x00300000, 0x00400000, 0x00800000,
		0x0f000000, 
		0x30000000, 0x40000000, 0x80000000
    },{ //0x24
		0x000000ff
    },{ //0x28
        0x0000ffff
    },{ //0x2c
        0x0000ffff
    },{ //0x30
		0x0000000f, 
		0x00000070,
		0x00000f00, 
		0x00007000,
		0x000f0000,
		0x00300000, 0x00400000
    },{ //0x34
        0x0000000f, 
		0x00000070,
		0x00000f00,
		0x00007000,
		0x000f0000,
		0x00300000, 0x00400000
    },{ //0x38
        0x0000ffff
    },{ //0x3c
        0x000001ff,
		0x00002000, 0x00004000, 0x00008000
    },{ //0x40
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000700,
		0x00001800, 0x00006000, 0x00008000,
		0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000
    },{ //0x44
		0x00007fff,
		0x0f000000
    },{ //0x48
		0x00007fff,
		0x0f000000
    },{ //end-sign
		0xffffffff, 0xffffffff
	}
};


/******************** WWDG *********************/
//register information
#define base_wwdg 0x40002c00
const uint32_t arr1_wwdg[0x3ff][3] = {

  	{0x0000007f, 1, 0}, //0x00
    {0x0000007f, 1, 0}, //0x04
    {0x00000000, 2, 0}, //0x08
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_wwdg[0x3ff][32] = {

    {   //0x00
        0x0000007f, 0x00000080,
    },{ //0x04
        0x0000007f, 0x00000080,
		0x00000100, 0x00000200
    },{ //0x08
        0x00000001
    },{ //end-sign
        0xffffffff, 0xffffffff
    }
};


/******************** IWDG *********************/
//register information
#define base_iwdg 0x40003000
const uint32_t arr1_iwdg[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000fff, 1, 0}, //0x08
    {0x00000000, 2, 0}, //0x0c
    {0x00000fff, 1, 0}, //0x10
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_iwdg[0x3ff][32] = {

    {   //0x00
		0x0000ffff, 0x0000aaaa
    },{ //0x04
        0x00000007
    },{ //0x08
		0x00000fff
    },{ //0x0c
        0x00000001, 0x00000002, 0x00000004
    },{ //0x10
        0x00000fff
    },{ //end-sign
        0xffffffff, 0xffffffff
    }
};


/******************** I2S2-3ext/SPI2-3/I2S2-3/ *********************/
//register information
#define base_i2s2ext 0x40003400
#define base_spi2 0x40003800
#define base_spi3 0x40003c00
#define base_i2s3ext 0x40004000
const uint32_t arr1_spi2[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000700, 1, 0}, //0x04
    {0x00000020, 2, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000007, 1, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000010, 1, 0}, //0x20
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_spi2[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004,
        0x00000038, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000
    },{ //0x04
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x000000f0, 
		0x00000100, 0x00000200, 0x00000400
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000600,
		0x00001800
    },{ //0x0c
		0x0000ffff
    },{ //0x10
		0x0000ffff
    },{ //0x14
		0x0000ffff
    },{ //0x18
		0x0000ffff
    },{ //0x1c
		0x00000001, 0x00000006, 0x00000008,
		0x00000030, 0x00000080,
		0x00000300, 0x00000400, 0x00000800
    },{ //0x20
		0x000000ff,
		0x00000100, 0x00000200
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** USART2-3/UART4-5 *********************/
//register information
#define base_usart3 0x40004400
#define base_usart2 0x40004800
#define base_uart4 0x40004c00
#define base_uart5 0x40005000
const uint32_t arr1_usart2[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x02000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_usart2[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
		0x10000000
    },{ //0x04
		0x00000010, 0x00000020, 0x00000040,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00003000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x0f000000,
		0xf0000000
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x000e0000,
		0x00300000, 0x00400000
    },{ //0x0c
		0x0000ffff
    },{ //0x10
		0x000000ff, 0x0000ff00
    },{ //0x14
		0x00ffffff, 0xff000000
    },{ //0x18
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 
    },{ //0x1c
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000040,
        0x00000100, 0x00000200, 0x00000800,
        0x00001000,
		0x00020000,
		0x00100000
    },{ //0x24
        0x000000ff
    },{ //0x28
        0x000000ff
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** I2C1-2 *********************/
//register information
#define base_i2c1 0x40005400
#define base_i2c2 0x40005800
const uint32_t arr1_i2c1[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000001, 2, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_i2c1[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000f00,
		0x00001000, 0x00004000, 0x00000800,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000
    },{ //0x04
		0x000003ff, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00ff0000, 
		0x01000000, 0x02000000, 0x04000000
    },{ //0x08
		0x000003ff, 0x00000400, 
		0x00008000
    },{ //0x0c
		0x000000fe, 
		0x00000700,
		0x00008000
    },{ //0x10
		0x000000ff,
		0x0000ff00,
		0x000f0000,
		0x00f00000,
		0xf0000000
    },{ //0x14
		0x00000fff, 
		0x00001000, 0x00008000,
		0x0fff0000, 
		0x80000000
    },{ //0x18
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00008000,
		0x00010000,
		0x00fe0000
    },{ //0x1c
		0x00000008,
		0x00000010, 0x00000020,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000
    },{ //0x20
		0x000000ff
    },{ //0x24
        0x0000ffff
    },{ //0x28
        0x0000ffff
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** USB device fs/USB/CAN SRAM *********************/
/*
 * The USB and CAN both use the same mmio resigister, so here we should 
 * deal with in a special method.
 */
//register information
#define base_usbfs 0x40005c00
#define base_usbsram 0x40006000
//USB
const uint32_t arr1_usbfs[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00 
    {0x00000000, 1, 0}, 
    {0x00000000, 1, 0}, 
    {0x00000000, 1, 0}, 
    {0x00000000, 1, 0}, 
    {0x00000000, 1, 0}, 
    {0x00000000, 1, 0}, 
    {0x00000000, 1, 0}, //0x1c
	//reserved 0x20-0x3f
    [0x10] = {0x00000003, 1, 0}, //0x40
    [0x11] = {0x00000000, 2, 0}, //0x44
    [0x12] = {0x00000000, 2, 0},  //0x48
    [0x13] = {0x00000000, 3, 0}, //0x4c
    [0x14] = {0x00000000, 2, 0}, //0x50
    [0x15] = {0x00000000, 3, 0}, //0x54
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
//USB
const uint32_t arr2_usbfs[0x3ff][32] = {
	
	{ //0x00
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},{ //0x04
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},{ //0x08
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},{ //0x0c
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},{ //0x10
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},{ //0x14
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},{ //0x18
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},{ //0x1c
		0x0000000f, 
		0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000, 0x00004000, 0x00008000
	},
	//0x20-0x3f - reserved
	[0x10] = { //
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
	},[0x11] = {
		0x0000000f, 
		0x00000010, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
	},[0x12] = {
		0x000007ff,
		0x00001800,
		0x00002000, 0x00004000, 0x00008000
	},[0x13] = {
		0x0000007f, 0x00000080
	},[0x14] = {
		0x0000fff8
	},[0x15] = {
    	0x00000001, 0x00000002, 0x00000008,
		0x000000f0
	},{ //end-sign
		0xffffffff, 0xffffffff
	}
};


/******************** bxCAN *********************/
//register information
#define base_bxcan 0x40006400
const uint32_t arr1_bxcan[0x3ff][3] = {

	//CAN
    {0x00010020, 1, 0}, //0x00
    {0x00000c02, 2, 0}, //0x04
    {0x1c000000, 2, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 2, 0}, //0x18
    {0x01230000, 3, 0}, //0x1c
	//CAN mail-box register
    [0x60] = {0x00000000, 1, 0}, //0x180
    [0x61] = {0x00000000, 1, 0}, //0x184
    [0x62] = {0x00000000, 3, 0}, //0x188
    [0x63] = {0x00000000, 3, 0}, //0x18c
    [0x64] = {0x00000000, 1, 0}, //0x190
    [0x65] = {0x00000000, 1, 0}, //0x194
    [0x66] = {0x00000000, 3, 0}, //0x198
    [0x67] = {0x00000000, 3, 0}, //0x19c
    [0x68] = {0x00000000, 1, 0}, //0x1a0
    [0x69] = {0x00000000, 1, 0}, //0x1a4
    [0x6a] = {0x00000000, 3, 0}, //0x1a8
    [0x6b] = {0x00000000, 3, 0}, //0x1ac
    [0x6c] = {0x00000000, 1, 0}, //0x1b0
    [0x6d] = {0x00000000, 1, 0}, //0x1b4
    [0x6e] = {0x00000000, 3, 0}, //0x1b8
    [0x6f] = {0x00000000, 3, 0}, //0x1bc
    [0x70] = {0x00000000, 1, 0}, //0x1c0
    [0x71] = {0x00000000, 1, 0}, //0x1c4
    [0x72] = {0x00000000, 3, 0}, //0x1c8
    [0x73] = {0x00000000, 3, 0}, //0x1cc
    [0x80] = {0x2a1c0e01, 1, 0}, //0x200
    [0x81] = {0x00000000, 1, 0}, //0x204
    [0x83] = {0x00000000, 1, 0}, //0x20c
    [0x85] = {0x00000000, 1, 0}, //0x214
    [0x87] = {0x00000000, 1, 0}, //0x21c
	/*
    [0x90 ... 0xab] = {0x00000000, 1, 0}, //0x240 -0x2ac
	*/
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_bxcan[0x3ff][32] = {

	//CAN
    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00008000,
		0x00010000
    },{ //0x04
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 
		0x00000100, 0x00000200, 0x00000400, 0x00000800
    },{ //0x08
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000080, 
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00800000, 
		0x03000000,
		0x1c000000,
		0xe0000000
    },{ //0x0c
		0x00000003, 0x00000008,
		0x00000010, 0x00000020
    },{ //0x10
		0x00000003, 0x00000008,
		0x00000010, 0x00000020
    },{ //0x14
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00008000,
		0x00010000, 0x00020000
    },{ //0x18
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000070,
		0x00ff0000, 
		0xff000000
    },{ //0x1c
		0x000003ff, 
		0x000f0000, 0x00700000,
		0x00300000, 
		0x04000000, 0x80000000
    },
	[0x60] = { //0x180
		0x00000001, 0x00000002, 0x00000004,
		0x001fff80,
		0xffe00000
    },[0x61] = { //0x184
		0x0000000f,
		0x00000100,
		0xffff0000
    },[0x62] = { //0x188
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x63] = { //0x18c
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x64] = { //0x190
		0x00000001, 0x00000002, 0x00000004,
		0x001fff80,
		0xffe00000
    },[0x65] = { //0x194
		0x0000000f,
		0x00000100,
		0xffff0000
    },[0x66] = { //0x198
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x67] = { //0x19c
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x68] = { //0x1a0
		0x00000001, 0x00000002, 0x00000004,
		0x001fff80,
		0xffe00000
    },[0x69] = { //0x1a4
		0x0000000f,
		0x00000100,
		0xffff0000
    },[0x6a] = { //0x1a8
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x6b] = { //0x1ac
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x6c] = { //0x1b0
		0x00000002, 0x00000004,
		0x001fff80,
		0xffe00000
    },[0x6d] = { //0x1b4
		0x0000000f,
		0x00000100,
		0xffff0000
    },[0x6e] = { //0x1b8
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x6f] = { //0x1bc
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x70] = { //0x1c0
		0x00000002, 0x00000004,
		0x001fff80,
		0xffe00000
    },[0x71] = { //0x1c4
		0x0000000f,
		0x00000100,
		0xffff0000
    },[0x72] = { //0x1c8
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },[0x73] = { //0x1cc
        0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
    },
	//0x1d0-0x1ff rserved
	[0x80] = { //0x200
        0x00000001
    },[0x81] = { //0x204
		0x00003fff
    },[0x82] = { //0x208
    },[0x83] = { //0x20c
		0x00003fff
    },[0x84] = { //0x210
	},[0x85] = { //0x214
		0x00003fff
	},[0x86] = {
	},[0x87] = { //0x21c
		0x00003ff
	},
	/*
	//0x224-0x23f reserved
	[0x90 ... 0xc7] = { //0x240
   		0xffffffff
	},
	*/
	{ //end-sign
		0xffffffff, 0xffffffff
	}
};


/******************** PWR *********************/
//register information
#define base_pwr 0x40007000
const uint32_t arr1_pwr[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 4, 0}, //0x04
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_pwr[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x000000e0,
		0x00000100
    },{ //0x04
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000100, 0x00000200, 0x00000400
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** DAC1 *********************/
//register information
#define base_dac1 0x40007400
const uint32_t arr1_dac1[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 3, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 3, 0}, //0x18
    {0x00000000, 3, 0}, //0x1c
    {0x00000000, 3, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x00000000, 3, 0}, //0x2c
    {0x00000000, 3, 0}, //0x30
    {0x00000000, 2, 0}, //0x34
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_dac1[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 
		0x00000038, 0x000000c0,
		0x00000f00,
		0x00001000, 0x00002000,
		0x00010000, 0x00020000, 0x000400000,
		0x00380000, 0x00c00000,
		0x0f000000,
		0x10000000, 0x20000000
    },{ //0x04
		0x00000001, 0x00000002
    },{ //0x08
		0x00000fff
    },{ //0x0c
		0x0000fff0
    },{ //0x10
		0x000000ff
    },{ //0x14
		0x00000fff
    },{ //0x18
		0x0000fff0
    },{ //0x1c
		0x000000ff
    },{ //0x20
		0x00000fff,
		0x0fff0000
    },{ //0x24
		0x0000fff0, 0xfff00000
    },{ //0x28
        0x000000ff, 0x0000ff00
    },{ //0x2c
		0x00000fff,
    },{ //0x30
		0x00000fff,
    },{ //0x34
		0x00002000,
		0x20000000
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** I2C3 *********************/
//register information
#define base_i2c3 0x40007800
const uint32_t arr1_i2c3[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000001, 2, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 3, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_i2c3[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000f00, 
		0x00001000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000
    },{ //0x04
		0x000003ff, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00ff0000, 
		0x01000000, 0x02000000, 0x04000000
    },{ //0x08
		0x000003ff, 0x00000400
    },{ //0x0c
		0x000000fe,
		0x00000700,
		0x00008000
    },{ //0x10
		0x000000ff, 0x0000ff00, 0x000f0000, 0x00f00000,
		0xf0000000
    },{ //0x14
		0x00000fff, 
		0x00001000, 0x00008000,
		0x0fff0000, 0x80000000
    },{ //0x18
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00008000,
		0x00010000, 0x00fe0000
    },{ //0x1c
		0x00000008,
		0x00000010, 0x000000020,
		0x00000100, 0x000000200, 0x00000400, 0x00000800,
		0x00001000, 0x000002000
    },{ //0x20
		0x000000ff
    },{ //0x24
		0x000000ff
    },{ //0x28
        0x0000ffff
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** SYSCFS+COMP+OPAMP *********************/
/*
 * They use different mmio registers within this region
 */
//register information
#define base_syscfs 0x40010000
const uint32_t arr1_syscfs[0x3ff][3] = {

	//SYSCFS
    {0x7c000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 4, 0}, //0x1c
    {0x00000000, 4, 0}, //0x20
    {0x00000000, 4, 0}, //0x24
    {0x00000000, 4, 0}, //0x28
    {0x00000000, 4, 0}, //0x2c
    {0x00000000, 4, 0}, //0x30
    {0x00000000, 4, 0}, //0x34
    {0x00000000, 1, 0}, //0x38
    {0x00000000, 1, 0}, //0x3c
    {0x00000000, 1, 0}, //0x40
    {0x00000000, 1, 0}, //0x44
    {0x00000000, 1, 0}, //0x48
	{0x00000000, 0xf, 0}, //0x4c
    {0x00000200, 1, 0}, //0x50
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_syscfs[0x3ff][32] = {

	//SYSCFS
    {   //0x00
		0x00000003, 
		0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00c00000,
		0xfc000000
    },{ //0x04
		0x0000ffff
    },{ //0x08
		0x0000000f, 0x000000f0, 0x0000f000, 0x0000f000
    },{ //0x0c
		0x0000000f, 0x000000f0, 0x0000f000, 0x0000f000
    },{ //0x10
		0x0000000f, 0x000000f0, 0x0000f000, 0x0000f000
    },{ //0x14
		0x0000000f, 0x000000f0, 0x0000f000, 0x0000f000
    },{ //0x18
		0x00000001, 0x00000002, 0x00000004, 
		0x00000010,
		0x00000100
    },{ //0x1c
		0x00000001, 0x00000002, 0x0000000c,
		0x00000070, 
		0x00003c00, 0x00008000,
		0x00030000, 0x001c0000,
		0x40000000, 0x80000000
	},{ //0x20
        0x00000001, 0x00000002, 0x0000000c,
        0x00000070, 0x00000080,
        0x00000200, 
		0x00003c00, 0x00008000,
		0x001c0000,
		0x02000000, 0x04000000,
		0x40000000, 0x80000000
    },{ //0x24
		0x00000001, 0x0000000c,
		0x00000070, 0x00000080,
		0x00003c00, 0x00008000,
		0x00030000, 0x001c0000,
		0x40000000, 0x80000000
    },{ //0x28
        0x00000001, 0x00000002, 0x0000000c,
        0x00000070, 0x00000080,
        0x00000200, 
		0x00003c00, 0x00008000,
		0x001c0000,
		0x02000000, 0x04000000,
		0x40000000, 0x80000000
    },{ //0x2c
		0x00000001, 0x0000000c,
		0x00000070, 0x00000080,
		0x00003c00, 0x00008000,
		0x00030000, 0x001c0000,
		0x40000000, 0x80000000
    },{ //0x30
        0x00000001, 0x00000002, 0x0000000c,
        0x00000070, 0x00000080,
        0x00000200, 
		0x00003c00, 0x00008000,
		0x001c0000,
		0x02000000, 0x04000000,
		0x40000000, 0x80000000
    },{ //0x34
		0x00000001, 0x0000000c,
		0x00000070, 0x00000080,
		0x00003c00, 0x00008000,
		0x00030000, 0x001c0000,
		0x40000000, 0x80000000
    },{ //0x38
		0x00000001, 0x00000020, 0x0000000c,
		0x00000060, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000,
		0x0003c000, 0x00040000,
		0x00f80000, 
		0x1f000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x3c
		0x00000001, 0x00000020, 0x0000000c,
		0x00000060, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000,
		0x0003c000, 0x00040000,
		0x00f80000, 
		0x1f000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x40
		0x00000001, 0x00000020, 0x0000000c,
		0x00000060, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000,
		0x0003c000, 0x00040000,
		0x00f80000, 
		0x1f000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x44
		0x00000001, 0x00000020, 0x0000000c,
		0x00000060, 0x00000080,
		0x00000100, 0x00000600, 0x00000800,
		0x00003000,
		0x0003c000, 0x00040000,
		0x00f80000, 
		0x1f000000, 0x20000000, 0x40000000, 0x80000000
	},{ //0x48
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000
	},{ //0x4c
	},{ //0x50
		0x00000003, 0x0000000c,
		0x00000030, 0x000000c0,
		0x00000300
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};

 
/******************** EXTI *********************/
//register information
#define base_exti 0x40010400
const uint32_t arr1_exti[0x3ff][3] = {

    {0x1f800000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 1, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 0xf, 0}, //0x18
    {0x00000000, 0xf, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 1, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0x00000000, 1, 0}, //0x2c
    {0x00000000, 0xf, 0}, //0x30
    {0x00000000, 1, 0}, //0x34
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_exti[0x3ff][32] = {

    {   //0x00
		0xffffffff
    },{ //0x04
		0xffffffff
    },{ //0x08
		0x003fffff, 0xe0000000
    },{ //0x0c
		0x003fffff, 0xe0000000
    },{ //0x10
		0x003fffff, 0xe0000000
    },{ //0x14
		0x003fffff, 0xe0000000
    },{ //0x18
    },{ //0x1c
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004, 0x00000008
    },{ //0x24
        0x00000001, 0x00000002, 0x00000004, 0x00000008
    },{ //0x28
        0x00000001, 0x00000002
    },{ //0x2c
        0x00000001, 0x00000002
    },{ //0x30
        0x00000001, 0x00000002
    },{ //0x34
        0x00000001, 0x00000002
    },{ // end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** TIM1 *********************/
//register information
#define base_tim1 0x40012c00
const uint32_t arr1_tim1[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x0000ffff, 3, 0}, //0x2c
    {0x00000000, 3, 0}, //0x30
    {0x00000000, 3, 0}, //0x34
    {0x00000000, 3, 0}, //0x38
    {0x00000000, 3, 0}, //0x3c
    {0x00000000, 3, 0}, //0x40
    {0x00000000, 1, 0}, //0x44
    {0x00000000, 1, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
    {0x00000000, 1, 0}, //0x50
    {0x00000000, 3, 0}, //0x54
    {0x00000000, 3, 0}, //0x58
    {0x00000000, 3, 0}, //0x5c
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_tim1[0x3ff][32] = {

    {   //0x00
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000060, 0x00000080,
		0x00000300, 0x00000800
    },{ //0x04
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000070, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000,
		0x00010000, 0x00040000,
		0x00f00000
    },{ //0x08
		0x00000007, 0x00000008,
		0x00000070, 0x00000080, 
		0x00000f00,
		0x00003000, 0x00004000, 0x00008000,
		0x00010000
    },{ //0x0c
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000
    },{ //0x10
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000,
		0x00010000, 0x00020000
    },{ //0x14
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100
    },{ //0x18
		0x00000003, 0x0000000c,
		0x000000f0,
		0x00000300, 0x00000c00,
		0x0000f000
    },{ //0x1c
		0x00000003, 0x0000000c,
		0x000000f0, 
		0x00000300, 0x00000c00,
		0x0000f000
    },{ //0x20
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000,
		0x00010000, 0x00020000,
		0x00100000, 0x00200000
    },{ //0x24
		0x0000ffff,
		0x10000000
    },{ //0x28
		0x0000ffff
    },{ //0x2c
		0x0000ffff
    },{ //0x30
		0x0000ffff
    },{ //0x34
		0x0000ffff
    },{ //0x38
		0x0000ffff
    },{ //0x3c
		0x0000ffff
    },{ //0x40
		0x0000ffff
 	}, { //0x44
		0x000000ff,
		0x00000300, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x000f0000, 
		0x00f00000,
		0x01000000, 0x02000000
    },{ //0x48
		0x0000001f, 
		0x00001f00
    },{ //0x4c
		0xffffffff
	},{ //0x50
		0x00000003, 0x0000000c
	},{ //0x54
		0x00000004, 0x00000008,
		0x00000070, 0x00000080,
		0x00000400, 0x00000800,
		0x00007000, 0x00008000,
		0x00010000, 
		0x01000000
	},{ //0x58
		0x0000ffff,
		0x20000000, 0x40000000, 0x80000000
	}, { //0x5c
		0x0000ffff
    },{ // end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** SPI1 *********************/
//register information
#define base_spi1 0x40013000
const uint32_t arr1_spi1[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000700, 1, 0}, //0x04
    {0x00000002, 2, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000007, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 3, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000010, 1, 0}, //0x20
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_spi1[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004,
		0x0000003f, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000
    },{ //0x04
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000f00,
		0x00001000, 0x00002000, 0x00004000
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000600,
		0x00001800
    },{ //0x0c
		0x0000ffff
    },{ //0x10
		0x0000ffff
    },{ //0x14
		0x0000ffff
    },{ //0x18
		0x0000ffff
    },{ //0x1c
        0x00000001, 0x00000006, 0x00000008,
		0x00000030, 0x00000080,
		0x00000300, 0x00000400, 0x00000800
    },{ //0x20
		0x000000ff,
		0x00000100, 0x00000200
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** TIM8 *********************/
//register information
#define base_tim8 0x40013400
const uint32_t arr1_tim8[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x0000ffff, 3, 0}, //0x2c
    {0x00000000, 3, 0}, //0x30
    {0x00000000, 3, 0}, //0x34
    {0x00000000, 3, 0}, //0x38
    {0x00000000, 3, 0}, //0x3c
    {0x00000000, 3, 0}, //0x40
    {0x00000000, 1, 0}, //0x44
    {0x00000000, 1, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
    {0x00000000, 1, 0}, //0x50
    {0x00000000, 3, 0}, //0x54
    {0x00000000, 3, 0}, //0x58
    {0x00000000, 3, 0}, //0x5c
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_tim8[0x3ff][32] = {

    {   //0x00
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000060, 0x00000080,
		0x00000300, 0x00000800
    },{ //0x04
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000070, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000,
		0x00010000, 0x00040000,
		0x00f00000
    },{ //0x08
		0x00000007, 0x00000008,
		0x00000070, 0x00000080, 
		0x00000f00,
		0x00003000, 0x00004000, 0x00008000,
		0x00010000
    },{ //0x0c
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000
    },{ //0x10
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000,
		0x00010000, 0x00020000
    },{ //0x14
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100
    },{ //0x18
		0x00000003, 0x0000000c,
		0x000000f0,
		0x00000300, 0x00000c00,
		0x0000f000
    },{ //0x1c
		0x00000003, 0x0000000c,
		0x000000f0, 
		0x00000300, 0x00000c00,
		0x0000f000
    },{ //0x20
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000,
		0x00010000, 0x00020000,
		0x00100000, 0x00200000
    },{ //0x24
		0x0000ffff,
		0x10000000
    },{ //0x28
		0x0000ffff
    },{ //0x2c
		0x0000ffff
    },{ //0x30
		0x0000ffff
    },{ //0x34
		0x0000ffff
    },{ //0x38
		0x0000ffff
    },{ //0x3c
		0x0000ffff
    },{ //0x40
		0x0000ffff
 	}, { //0x44
		0x000000ff,
		0x00000300, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x000f0000, 
		0x00f00000,
		0x01000000, 0x02000000
    },{ //0x48
		0x0000001f, 
		0x00001f00
    },{ //0x4c
		0xffffffff
	},{ //0x50
		0x00000003, 0x0000000c
	},{ //0x54
		0x00000004, 0x00000008,
		0x00000070, 0x00000080,
		0x00000400, 0x00000800,
		0x00007000, 0x00008000,
		0x00010000, 
		0x01000000
	},{ //0x58
		0x0000ffff,
		0x20000000, 0x40000000, 0x80000000
	}, { //0x5c
		0x0000ffff
    },{ // end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** USART1 *********************/
//register information
#define base_usart1 0x40013800
const uint32_t arr1_usart1[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x02000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_usart1[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
		0x10000000
    },{ //0x04
		0x00000010, 0x00000020, 0x00000040,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00003000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x0f000000,
		0xf0000000
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x000e0000,
		0x00300000, 0x00400000
    },{ //0x0c
		0x0000ffff
    },{ //0x10
		0x000000ff, 0x0000ff00
    },{ //0x14
		0x00ffffff, 0xff000000
    },{ //0x18
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 
    },{ //0x1c
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000040,
        0x00000100, 0x00000200, 0x00000800,
        0x00001000,
		0x00020000,
		0x00100000
    },{ //0x24
        0x000000ff
    },{ //0x28
        0x000000ff
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** SPI4 *********************/
//register information
#define base_spi4 0x40013c00
const uint32_t arr1_spi4[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000700, 1, 0}, //0x04
    {0x00000002, 2, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000007, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 3, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000010, 1, 0}, //0x20
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_spi4[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004,
		0x0000003f, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000
    },{ //0x04
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000f00,
		0x00001000, 0x00002000, 0x00004000
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000600,
		0x00001800
    },{ //0x0c
		0x0000ffff
    },{ //0x10
		0x0000ffff
    },{ //0x14
		0x0000ffff
    },{ //0x18
		0x0000ffff
    },{ //0x1c
        0x00000001, 0x00000006, 0x00000008,
		0x00000030, 0x00000080,
		0x00000300, 0x00000400, 0x00000800
    },{ //0x20
		0x000000ff,
		0x00000100, 0x00000200
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** TIM15 *********************/
//register information
#define base_tim15 0x40014000
const uint32_t arr1_tim15[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x0000ffff, 3, 0}, //0x2c
    {0x00000000, 3, 0}, //0x30
    {0x00000000, 1, 0}, //0x34
    {0x00000000, 1, 0}, //0x38
    {0x00000000, 0xf, 0}, //0x3c
    {0x00000000, 0xf, 0}, //0x40
    {0x00000000, 1, 0}, //0x44
    {0x00000000, 1, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_tim15[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000080,
        0x00000300, 0x00000800
    },{ //0x04
        0x00000001, 0x00000004, 0x00000008,
        0x00000070, 0x00000080,
		0x00000100, 0x00000200, 0x00000400
    },{ //0x08
        0x00000007,
        0x00000070, 0x00000080,
        0x00010000
    },{ //0x0c
        0x00000001, 0x00000002, 0x00000004,
        0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400,
        0x00001000, 0x00002000, 0x00004000,
		0x00010000, 0x00020000, 0x00040000
    },{ //0x10
        0x00000001, 0x00000002, 0x00000004,
        0x00000020, 0x00000040, 0x00000080,
        0x00000200, 0x00000400
    },{ //0x14
        0x00000001, 0x00000002, 0x00000004,
        0x00000020, 0x00000040, 0x00000080,
    },{ //0x18
        0x00000003, 0x0000000c,
        0x000000f0,
        0x00000300, 0x00000c00,
        0x0000f000
    },{ //0x1c
        0x00000003, 0x0000000c,
        0x000000f0,
        0x00000300, 0x00000c00,
        0x0000f000
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000080,
    },{ //0x24
        0x0000ffff, 0xf0000000
    },{ //0x28
        0x0000ffff
    },{ //0x2c
        0x0000ffff, 0xffff0000
    },{ //0x30
		0x000000ff
    },{ //0x34
        0x0000ffff,
    },{ //0x38
        0x0000ffff,
    },{ //0x3c
    },{ //0x40
    },{ //0x44
		0x000000ff,
		0x00000300, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000,
    },{ //0x48
        0x0000001f, 0x00001f00
    },{ //0x4c
		0x0000ffff
    },{ //end-sign
		0xffffffff, 0xffffffff
	}
};


/******************** TIM16/17/20 *********************/
//register information
#define base_tim16 0x40014400
#define base_tim17 0x40014800
#define base_tim20 0x40015000
const uint32_t arr1_tim16[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 0xf, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x0000ffff, 3, 0}, //0x2c
    {0x00000000, 3, 0}, //0x30
    {0x00000000, 1, 0}, //0x34
    {0x00000000, 0xf, 0}, //0x38
    {0x00000000, 0xf, 0}, //0x3c
    {0x00000000, 0xf, 0}, //0x40
    {0x00000000, 1, 0}, //0x44
    {0x00000000, 1, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
    {0x00000000, 1, 0}, //0x50
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_tim16[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000080,
		0x00000100, 0x00000200
    },{ //0x04
        0x00000001, 0x00000004, 0x00000008,
        0x00000100, 0x00000200
    },{ //0x08
    },{ //0x0c
        0x00000001, 0x00000002,
        0x00000020, 0x00000080,
        0x00000100, 0x00000200,
       	0x00002000
    },{ //0x10
        0x00000001, 0x00000002,
        0x00000020, 0x00000080, 
        0x00000200, 
    },{ //0x14
        0x00000001, 0x00000002,
        0x00000020, 0x00000080, 
    },{ //0x18
        0x00000003, 0x0000000c,
        0x000000f0,
    },{ //0x1c
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004, 0x00000008
    },{ //0x24
        0x0000ffff, 0xf0000000
    },{ //0x28
        0x0000ffff
    },{ //0x2c
        0x0000ffff
    },{ //0x30
		0x000000ff
    },{ //0x34
        0x0000ffff
    },{ //0x38
    },{ //0x3c
    },{ //0x40
    },{ //0x44
		0x000000ff,
		0x00003000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000
    },{ //0x48
        0x0000001f, 0x00001f00
    },{ //0x4c
		0x0000ffff
    },{ //0x50
		0x00000003
	},{ //end-sign
		0xffffffff, 0xffffffff
	}
};


/******************** DMA1/2 *********************/
//register information
#define base_dma1 0x40020000
#define base_dma2 0x40020400
const uint32_t arr1_dma[0x3ff][3] = {

    {0x00000000, 2, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 0xf, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 3, 0}, //0x20
    {0x00000000, 3, 0}, //0x24
    {0x00000000, 3, 0}, //0x28
    {0x00000000, 0xf, 0}, //0x2c
    {0x00000000, 1, 0}, //0x30
    {0x00000000, 3, 0}, //0x34
    {0x00000000, 3, 0}, //0x38
    {0x00000000, 3, 0}, //0x3c
    {0x00000000, 3, 0}, //0x40
    {0x00000000, 1, 0}, //0x44
    {0x00000000, 3, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
    {0x00000000, 3, 0}, //0x50
    {0x00000000, 3, 0}, //0x54
    {0x00000000, 1, 0}, //0x58
    {0x00000000, 3, 0}, //0x5c
    {0x00000000, 3, 0}, //0x60
    {0x00000000, 3, 0}, //0x64
    {0x00000000, 3, 0}, //0x68
    {0x00000000, 1, 0}, //0x6c
    {0x00000000, 3, 0}, //0x70
    {0x00000000, 3, 0}, //0x74
    {0x00000000, 3, 0}, //0x78
    {0x00000000, 3, 0}, //0x7c
    {0x00000000, 1, 0}, //0x80
    {0x00000000, 3, 0}, //0x84
    {0x00000000, 3, 0}, //0x88
    {0x00000000, 3, 0}, //0x8c
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_dma[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
    },{ //0x04
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000300, 0x00000c00,
		0x00003000, 0x00004000
    },{ //0x0c
		0x0000ffff
    },{ //0x10
		0xffffffff
    },{ //0x14
		0xffffffff
    },{ //0x18
    },{ //0x1c
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000300, 0x00000c00,
		0x00003000, 0x00004000
    },{ //0x20
		0x0000ffff
    },{ //0x24
		0xffffffff
    },{ //0x28
		0xffffffff
    },{ //0x2c
    },{ //0x30
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000300, 0x00000c00,
		0x00003000, 0x00004000
    },{ //0x34
		0x0000ffff
    },{ //0x38
		0xffffffff
    },{ //0x3c
		0xffffffff
    },{ //0x40
    },{ //0x44
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000300, 0x00000c00,
		0x00003000, 0x00004000
    },{ //0x48
		0x0000ffff
    },{ //0x4c
		0xffffffff
    },{ //0x50
		0xffffffff
    },{ //0x54
    },{ //0x58
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000300, 0x00000c00,
		0x00003000, 0x00004000
    },{ //0x5c
		0x0000ffff
    },{ //0x60
		0xffffffff
    },{ //0x64
		0xffffffff
    },{ //0x68
    },{ //0x6c
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000300, 0x00000c00,
		0x00003000, 0x00004000
    },{ //0x70
		0x0000ffff
    },{ //0x74
		0xffffffff
    },{ //0x78
		0xffffffff
    },{ //0x7c
    },{ //0x80
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000300, 0x00000c00,
		0x00003000, 0x00004000
    },{ //0x84
		0x0000ffff
    },{ //0x88
		0xffffffff
    },{ //0x8c
		0xffffffff
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** RCC *********************/
//register information
#define base_rcc 0x40021000
const uint32_t arr1_rcc[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 1, 0}, //0x10
    {0x00000014, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000018, 1, 0}, //0x20
    {0x0c000000, 4, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0x00000000, 1, 0}, //0x2c
    {0x00000000, 0xf, 0}, //0x30
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_rcc[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 
		0x000000f8,
		0x0000ff00,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x01000000, 0x02000000
    },{ //0x04
		0x00000003, 0x0000000c,
		0x000000f0,
		0x00000700,
		0x00003800, 0x00008000,
		0x00010000, 0x00020000,
		0x00380000, 0x00400000, 0x00800000,
		0x07000000,
		0x10000000, 0x60000000, 0x80000000
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00800000
    },{ //0x0c
		0x00000001, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000
    },{ //0x10
        0x00000001, 0x00000002, 0x00000004, 
        0x00000010, 0x00000020, 
        0x00000800,
        0x00004000, 0x00008000,
		0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00080000,
		0x02000000, 0x04000000,
		0x20000000, 0x40000000, 0x80000000
    },{ //0x14
        0x00000001, 0x00000002, 0x00000004, 
        0x00000010, 0x00000020, 0x00000040,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000,
		0x10000000, 0x20000000
    },{ //0x18
		0x00000001,
		0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000,
		0x00100000
    },{ //0x1c
		0x00000001, 0x00000002, 0x00000004,
		0x00000010, 0x00000020,
		0x00000800,
		0x00004000, 0x00008000,
		0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x02000000, 0x04000000,
		0x10000000, 0x20000000, 0x40000000
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004,
        0x00000018,
        0x00000300,
        0x00008000,
		0x00010000
    },{ //0x24
		0x00000001, 0x00000002,
		0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
		0x10000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x28
		0x00000020, 
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000,
		0x10000000, 0x20000000
    },{ //0x2c
		0x0000000f, 
		0x000001f0,
		0x00003e00
    },{ //0x30
		0x00000003,
		0x00000010, 0x00000020, 0x00000400, 
		0x00000100, 0x00000200,
		0x00008000,
		0x00030000, 0x000c0000,
		0x00300000, 0x00c00000,
		0x01000000, 0x02000000
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** Flash interface *********************/
//register information
#define base_flashint 0x40022000
const uint32_t arr1_flashint[0x3ff][3] = {

    {0x00000030, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 2, 0}, //0x0c
    {0x00000080, 1, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 0xf, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0xffffffff, 1, 0}, //0x20
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_flashint[0x3ff][32] = {

    {   //0x00
		0x00000007, 0x00000008,
		0x00000010, 0x00000020
    },{ //0x04
		0xffffffff
    },{ //0x08
		0xffffffff
    },{ //0x0c
        0x00000001, 0x00000004,
        0x00000010, 0x00000020,
    },{ //0x10
        0x00000001, 0x00000002, 0x00000004,
        0x00000010, 0x00000020, 0x00000040, 0x00000080, 
        0x00000200, 0x00000400, 
        0x00001000, 0x00002000
    },{ //0x14
		0xffffffff
    },{ //0x18
    },{ //0x1c
		0x00000001, 0x00000006,
		0x00000100, 0x00000200, 0x00000400,
		0x00001000, 0x00002000, 0x00004000,
		0x00ff0000, 0xff000000
    },{ //0x20
		0xffffffff
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** CRC *********************/
//register information
#define base_crc 0x40023000
const uint32_t arr1_crc[0x3ff][3] = {

    {0xffffffff, 3, 0}, //0x00
    {0x00000000, 3, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 0xf, 0}, //0x0c
    {0xffffffff, 3, 0}, //0x10
    {0x04c11db7, 3, 0}, //0x14
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_crc[0x3ff][32] = {

    {   //0x00
		0xffffffff
    },{ //0x04
        0x0000000f,
    },{ //0x08
		0x00000001, 
		0x00000018, 0x00000060, 0x00000080
    },{ //0x0c
    },{ //0x10
		0xffffffff
    },{ //0x14
		0x04c11db7
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** TSC *********************/
//register information
#define base_tsc 0x40024000
const uint32_t arr1_tsc[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 2, 0}, //0x0c
    {0xffffffff, 1, 0}, //0x10
    {0x00000000, 0xf, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 0xf, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 0xf, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0x00000000, 0xf, 0}, //0x2c
    {0x00000000, 0xf, 0}, //0x30
    {0x00000000, 3, 0}, //0x34
    {0x00000000, 3, 0}, //0x38
    {0x00000000, 3, 0}, //0x3c
    {0x00000000, 3, 0}, //0x40
    {0x00000000, 3, 0}, //0x44
    {0x00000000, 3, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
    {0x00000000, 3, 0}, //0x50
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_tsc[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x000000e0, 
		0x00007000, 0x00008000,
		0x00010000,
		0x00fe0000, 
		0x0f000000,
		0xf0000000
    },{ //0x04
        0x00000001, 0x00000002
    },{ //0x08
        0x00000001, 0x00000002
    },{ //0x0c
        0x00000001, 0x00000002
    },{ //0x10
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
        0x00001000, 0x00002000, 0x00004000, 0x00008000,
        0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
        0x10000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x14
    },{ //0x18
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
        0x00001000, 0x00002000, 0x00004000, 0x00008000,
        0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
        0x10000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x1c
    },{ //0x20
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
        0x00001000, 0x00002000, 0x00004000, 0x00008000,
        0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
        0x10000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x24
    },{ //0x28
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400, 0x00000800,
        0x00001000, 0x00002000, 0x00004000, 0x00008000,
        0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
        0x10000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x2c
    },{ //0x30
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000
    },{ //0x34
        0x00000fff
    },{ //0x38
        0x00000fff
    },{ //0x3c
        0x00000fff
    },{ //0x40
        0x00000fff
    },{ //0x44
        0x00000fff
    },{ //0x48
        0x00000fff
    },{ //0x4c
        0x00000fff
    },{ //0x50
		0x00000fff
	},{ //end-sign
		0xffffffff, 0xffffffff
	}
};


/******************** GPIOA-H *********************/
//register information
#define base_gpioa 0x48001c00
#define base_gpiob 0x48001800
#define base_gpioc 0x48001400
#define base_gpiod 0x48001000
#define base_gpioe 0x48000c00
#define base_gpiof 0x48000800
#define base_gpiog 0x48000400
#define base_gpioh 0x48000000
const uint32_t arr1_gpioa[0x3ff][3] = {

    {0xa8000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x0c000000, 1, 0}, //0x08
    {0x64000000, 1, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 1, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0x00000000, 0xf, 0xf}, //end sign
};
const uint32_t arr1_gpiob[0x3ff][3] = {

    {0x00000280, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x000000c0, 1, 0}, //0x08
    {0x00000100, 1, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 1, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0x00000000, 0xf, 0xf}, //end sign
};
const uint32_t arr1_gpioo[0x3ff][3] = { //other

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 3, 0}, //0x10
    {0x00000000, 3, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 1, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
/*
 * Common for gpioa/b/other
 */
const uint32_t arr2_gpio[0x3ff][32] = {

    {   //0x00
		0x00000003, 0x0000000c,
		0x00000030, 0x000000c0,
		0x00000300, 0x00000c00,
		0x00003000, 0x0000c000,
		0x00030000, 0x000c0000,
		0x00300000, 0x00c00000,
		0x03000000, 0x0c000000,
		0x30000000, 0xc0000000
    },{ //0x04
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000
    },{ //0x08
		0x00000003, 0x0000000c,
		0x00000030, 0x000000c0,
		0x00000300, 0x00000c00,
		0x00003000, 0x0000c000,
		0x00030000, 0x000c0000,
		0x00300000, 0x00c00000,
		0x03000000, 0x0c000000,
		0x30000000, 0xc0000000
    },{ //0x0c
		0x00000003, 0x0000000c,
		0x00000030, 0x000000c0,
		0x00000300, 0x00000c00,
		0x00003000, 0x0000c000,
		0x00030000, 0x000c0000,
		0x00300000, 0x00c00000,
		0x03000000, 0x0c000000,
		0x30000000, 0xc0000000
    },{ //0x10
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000
    },{ //0x14
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000
    },{ //0x18
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000, 0x00020000, 0x00040000, 0x00080000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000, 0x04000000, 0x08000000,
		0x10000000, 0x20000000, 0x40000000, 0x80000000
    },{ //0x1c
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00010000
    },{ //0x20
		0x0000000f, 0x000000f0, 0x00000f00, 0x0000f000,
		0x000f0000, 0x00f00000, 0x0f000000, 0xf0000000
    },{ //0x24
		0x0000000f, 0x000000f0, 0x00000f00, 0x0000f000,
		0x000f0000, 0x00f00000, 0x0f000000, 0xf0000000
    },{ //0x28
		0x00000003, 0x0000000c,
		0x00000030, 0x000000c0,
		0x00000300, 0x00000c00,
		0x00003000, 0x0000c000,
		0x00030000, 0x000c0000,
		0x00300000, 0x00c00000,
		0x03000000, 0x0c000000,
		0x30000000, 0xc0000000
    },{ //end-sign
		0xffffffff, 0xffffffff
    }
};


/******************** ADC1/2 /3/4*********************/
//register information
#define base_adc1 0x50000000
#define base_adc3 0x50000400
const uint32_t arr1_adc[0x3ff][3] = {

    {0x00000000, 2, 0}, //0x00
    {0x00000000, 0xf, 0}, //0x04
    {0x02000000, 1, 0}, //0x08
    {0x00000000, 3, 0}, //0x0c
    {0x00000000, 0xf, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 0xf, 0}, //0x1c
    {0x0fff0000, 3, 0}, //0x20
    {0x00ff0000, 3, 0}, //0x24
    {0x00ff0000, 3, 0}, //0x28
    {0x00000000, 3, 0}, //0x2c
    {0x00000000, 3, 0}, //0x30
    {0x00000000, 3, 0}, //0x34
    {0x00000000, 3, 0}, //0x38
    {0x00000000, 3, 0}, //0x3c
    {0x00000000, 3, 0}, //0x40
    {0x00000000, 0xf, 0}, //0x44
    {0x00000000, 0xf, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
	//0x50-0xb4 = {0}
	[0x14 ... 0x2d] = {0x00000000, 3, 0},
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_adc[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400
    },{ //0x04
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 0x00000040, 0x00000080,
        0x00000100, 0x00000200, 0x00000400
    },{ //0x08
        0x00000001, 0x00000002, 0x00000004, 0x00000008,
        0x00000010, 0x00000020, 
		0x30000000, 0x40000000, 0x80000000
    },{ //0x0c
        0x00000001, 0x00000002,
        0x00000018, 0x00000020,
		0x000003c0, 0x00000c00,
		0x00001000, 0x00002000, 0x00004000,
		0x00010000, 0x000e0000,
		0x00100000, 0x00200000, 0x00400000, 0x00800000,
		0x01000000, 0x02000000,
		0x7c000000
    },{ //0x10
    },{ //0x14
		0x00000038, 
		0x000001c0,	0x00000e00,
		0x00007000, 
		0x00038000,
		0x001c0000, 0x00e00000,
		0x07000000,
		0x38000000
    },{ //0x18
		0x00000007,
		0x00000038, 
		0x000001c0,	0x00000e00,
		0x00007000, 
		0x00038000,
		0x001c0000, 0x00e00000,
		0x07000000
    },{ //0x1c
    },{ //0x20
		0x00000fff, 
		0x0fff0000
    },{ //0x24
		0x000000ff,
		0x00ff0000
    },{ //0x28
		0x000000ff,
		0x00ff0000
    },{ //0x2c
    },{ //0x30
		0x0000000f,
		0x000007c0,
		0x00001f00,
		0x007c0000,
		0x1f000000
    },{ //0x34
		0x0000001f,
		0x000007c0,
		0x00001f00,
		0x007c0000,
		0x1f000000
    },{ //0x38
		0x0000001f,
		0x000007c0,
		0x00001f00,
		0x007c0000,
		0x1f000000
    },{ //0x3c
		0x0000001f,
		0x000007c0
    },{ //0x40
        0x0000ffff
    },{ //0x44
    },{ //0x48
    },{ //0x4c
		0x00000002, 
		0x0000003c, 0x000000c0,
		0x00001f00, 0x0007c000,
		0x001f0000, 0x7c000000
    },{ //0x50
	},{ //0x54
	},{ //0x58
	},{ //0x5c
	},{ //0x60
		0x00000fff, 0x7c000000, 0x80000000
	},{ //0x64
		0x00000fff, 0x7c000000, 0x80000000
	},{ //0x68
		0x00000fff, 0x7c000000, 0x80000000
	},{ //0x6c
		0x00000fff, 0x7c000000, 0x80000000
	},{ //0x70
	},{ //0x74
	},{ //0x78
	},{ //0x7c
	},{ //0x80
		0x0000ffff
	},{ //0x84
		0x0000ffff
	},{ //0x88
		0x0000ffff
	},{ //0x8c
		0x0000ffff
	},{ //0x90
	},{ //0x94
	},{ //0x98
	},{ //0x9c
	},{ //0xa0
		0x0007fffe
	},{ //0xa4
		0x0007fffe
	},{ //0xa8
	},{ //0xac
	},{ //0xb0
		0x0007fffe
	},{ //0xb4
		0x0000007f,
		0x007f0000
	},{ //end-sign
		0xffffffff, 0xffffffff
	}
};


/******************** FMC banks 1&2/3&4/control register *********************/
//register information
#define base_fmctr 0x60000000
#define base_fmcb3 0x80000400
#define base_fmcb1 0xa0000400
const uint32_t arr1_fmcb1[0x3ff][3] = {

    {0x00000000, 1, 0}, //0x00
    {0x00000000, 1, 0}, //0x04
    {0x00000000, 1, 0}, //0x08
    {0x00000000, 1, 0}, //0x0c
    {0x00000000, 2, 0}, //0x10
    {0x00000000, 1, 0}, //0x14
    {0x00000000, 1, 0}, //0x18
    {0x00000000, 1, 0}, //0x1c
    {0x00000000, 1, 0}, //0x20
    {0x00000000, 1, 0}, //0x24
    {0x00000000, 1, 0}, //0x28
    {0xffffffff, 1, 0}, //0x2c
    {0x00000000, 0xf, 0}, //0x30
    {0x00000000, 1, 0}, //0x34
    {0x00000000, 1, 0}, //0x38
    {0x00000000, 1, 0}, //0x3c
    {0x00000000, 1, 0}, //0x40
    {0x00000000, 0xf, 0}, //0x44
    {0x00000000, 1, 0}, //0x48
    {0x00000000, 3, 0}, //0x4c
	//0x50-0x11c
	[0x14 ... 0x47] = {0x00000000, 3, 0},
    {0x00000000, 0xf, 0xf}, //end sign
};
//effective values
const uint32_t arr2_fmcb1[0x3ff][32] = {

    {   //0x00
        0x00000001, 0x00000002, 0x0000000c,
        0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00080000,
		0x00100000
    },{ //0x04
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x000f0000, 0x00f00000, 0x0f000000,
		0x30000000
    },{ //0x08
        0x00000001, 0x00000002, 0x0000000c,
        0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00080000,
		0x00100000
    },{ //0x0c
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x000f0000, 0x00f00000, 0x0f000000,
		0x30000000
    },{ //0x10
        0x00000001, 0x00000002, 0x0000000c,
        0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00080000,
    },{ //0x14
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x000f0000, 0x00f00000, 0x0f000000,
		0x30000000
    },{ //0x18
        0x00000001, 0x00000002, 0x0000000c,
        0x00000030, 0x00000040, 0x00000080,
		0x00000100, 0x00000200, 0x00000400, 0x00000800,
		0x00001000, 0x00002000, 0x00004000, 0x00008000,
		0x00080000,
    },{ //0x1c
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x000f0000, 0x00f00000, 0x0f000000,
		0x30000000
    },
	[0x18] = { //0x
		0x00000002, 0x00000004, 0x00000008,
		0x00000030, 0x00000040,
		0x00001e00, 
		0x0001e000,
		0x00e00000
	},[0x19] = {
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040
	},[0x1a] = {
		0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
	},[0x1b] = {
		0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
	},
	[0x1d] = {
		0xffffffff
	},
	[0x20] = {
		0x00000002, 0x00000004, 0x00000008,
		0x00000030, 0x00000040,
		0x00001e00, 
		0x0001e000,
		0x00e00000
	},[0x21] = {
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040
	},[0x22] = {
		0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
	},[0x23] = {
		0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
	},
	[0x25] = {
		0xffffffff
	},
	[0x28] = {
		0x00000002, 0x00000004, 0x00000008,
		0x00000030, 0x00000040,
		0x00001e00, 
		0x0001e000,
		0x00e00000
	},[0x29] = {
		0x00000001, 0x00000002, 0x00000004, 0x00000008,
		0x00000010, 0x00000020, 0x00000040
	},[0x30] = {
		0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
	},[0x31] = {
		0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
	},[0x2c] = {
		0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
	},
	[0x41] = {
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x30000000
	},[0x43] = {
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x30000000
	},[0x45] = {
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x30000000
	},[0x47] = { // 0x11c
		0x0000000f, 0x000000f0, 
		0x0000ff00,
		0x30000000
	},{ //end-sign
		0xffffffff, 0xffffffff
	}
};

/*
 * The pointer array used to contruct stm32fxx database
 */
//base addr arrary
uint32_t sum_base[PERI_NUM] = {

	base_tim2,
	base_tim3,
	base_tim4,
	base_tim6,
	base_tim7,
	base_rtc,
	base_wwdg,
	base_iwdg,
	base_i2s2ext,
	base_spi2,
	base_spi3,
	base_i2s3ext,
	base_usart3,
	base_usart2,
	base_uart4,
	base_uart5,
	base_i2c1,
	base_i2c2,
	base_usbfs,
	base_usbsram,
	base_bxcan,
	base_pwr,
	base_dac1,
	base_i2c3,
	base_syscfs,
	base_exti,
	base_tim1,
	base_spi1,
	base_tim8,
	base_usart1,
	base_spi4,
	base_tim15,
	base_tim16,
	base_tim17,
	base_tim20,
	base_dma1,
	base_dma2,
	base_rcc,
	base_flashint,
	base_crc,
	base_tsc,
	base_gpioa,
	base_gpiob,
	base_gpioc,
	base_gpiod,
	base_gpioe,
	base_gpiof,
	base_gpiog,
	base_gpioh,
	base_adc1,
	base_adc3,
	base_fmctr,
	base_fmcb3,
	base_fmcb1
};
/*
 * Pointer array which point to array
 * which contains the resetval/type/is_special info
 * of every peripheral register
 */
uint32_t *sum_arr1[PERI_NUM] = {

	arr1_tim2,
	arr1_tim2,
	arr1_tim2,
	arr1_tim6,
	arr1_tim6,
	arr1_rtc,
	arr1_wwdg,
	arr1_iwdg,
	arr1_spi2,
	arr1_spi2,
	arr1_spi2,
	arr1_spi2,
	arr1_usart2,
	arr1_usart2,
	arr1_usart2,
	arr1_usart2,
	arr1_i2c1,
	arr1_i2c1,
	arr1_usbfs,
	arr1_usbfs,
	arr1_bxcan,
	arr1_pwr,
	arr1_dac1,
	arr1_i2c3,
	arr1_syscfs,
	arr1_exti,
	arr1_tim1,
	arr1_spi1,
	arr1_tim8,
	arr1_usart1,
	arr1_spi4,
	arr1_tim15,
	arr1_tim16,
	arr1_tim16,
	arr1_tim16,
	arr1_dma,
	arr1_dma,
	arr1_rcc,
	arr1_flashint,
	arr1_crc,
	arr1_tsc,
	arr1_gpioa,
	arr1_gpiob,
	arr1_gpioo,
	arr1_gpioo,
	arr1_gpioo,
	arr1_gpioo,
	arr1_gpioo,
	arr1_gpioo,
	arr1_adc,
	arr1_adc,
	arr1_fmcb1,
	arr1_fmcb1,
	arr1_fmcb1
};
/*
 * Pointer array point to array which contain the effective
 * values of every peripheral values
 */
uint32_t *sum_arr2[PERI_NUM] = {

	arr2_tim2,
	arr2_tim2,
	arr2_tim2,
	arr2_tim6,
	arr2_tim6,
	arr2_rtc,
	arr2_wwdg,
	arr2_iwdg,
	arr2_spi2,
	arr2_spi2,
	arr2_spi2,
	arr2_spi2,
	arr2_usart2,
	arr2_usart2,
	arr2_usart2,
	arr2_usart2,
	arr2_i2c1,
	arr2_i2c1,
	arr2_usbfs,
	arr2_usbfs,
	arr2_bxcan,
	arr2_pwr,
	arr2_dac1,
	arr2_i2c3,
	arr2_syscfs,
	arr2_exti,
	arr2_tim1,
	arr2_spi1,
	arr2_tim8,
	arr2_usart1,
	arr2_spi4,
	arr2_tim15,
	arr2_tim16,
	arr2_tim16,
	arr2_tim16,
	arr2_dma,
	arr2_dma,
	arr2_rcc,
	arr2_flashint,
	arr2_crc,
	arr2_tsc,
	arr2_gpio,
	arr2_gpio,
	arr2_gpio,
	arr2_gpio,
	arr2_gpio,
	arr2_gpio,
	arr2_gpio,
	arr2_gpio,
	arr2_adc,
	arr2_adc,
	arr2_fmcb1,
	arr2_fmcb1,
	arr2_fmcb1
};



#endif   //__DATA_TABLE__

