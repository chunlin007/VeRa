
(process:1202952): GLib-WARNING **: 01:49:39.608: ../../../../glib/gmem.c:489: custom memory allocation vtable not supported

GNU ARM Eclipse 64-bits QEMU v2.3.50 (qemu-system-gnuarmeclipse).
Board: 'NUCLEO-F103RB' (ST Nucleo Development Board for STM32 F1 series).
Device: 'STM32F103RB' (Cortex-M3 r0p1, MPU), Flash: 128 kB, RAM: 20 kB.
Image: '/projects/VeRa/Evaluation/ARM/Unit-Test/Firmware/Binaries-DICE/F103_I2C_TwoBoards_MasterTx_SlaveRx_DMA.elf'.
Command line: (none).
[0, 0]   1-th(total   1-th) 	unassigned mem_r *0x0
[0, 0]   2-th(total   2-th) 	unassigned mem_r *0x4
Load   2160 bytes at 0x08000000-0x0800086F.
Load     20 bytes at 0x08000870-0x08000883.
Load      0 bytes at 0x08000884-0x08000883.
Cortex-M3 r0p1 core initialised.
QEMU 2.3.50 monitor - type 'help' for more information
(qemu) QEMU 2.3.50 monitor - type 'help' for more information
(qemu) Cortex-M3 r0p1 core reset.
[800014c, 800018a]   1-th(total   3-th) 	pm_r *0x40021000 gets 0x0, remains CR+SR
[800014c, 800018a]   1-th(total   1-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[800014c, 800018a]   2-th(total   4-th) 	pm_r *0x40021004 gets 0x0, remains CR+SR
[800014c, 800018a]   2-th(total   2-th) 	pm_w *0x40021004 = 0x0, remains CR+SR
[800014c, 800018a]   3-th(total   5-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[800014c, 800018a]   3-th(total   3-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[800014c, 800018a]   4-th(total   6-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[800014c, 800018a]   4-th(total   4-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[800014c, 800018a]   5-th(total   7-th) 	pm_r *0x40021004 gets 0x0, remains CR+SR
[800014c, 800018a]   5-th(total   5-th) 	pm_w *0x40021004 = 0x0, remains CR+SR
[800014c, 800018a]   6-th(total   6-th) 	pm_w *0x40021008 = 0x9f0000, remains DR
[80006b4, 80006dc]   6-th(total   8-th) 	pm_r *0x40022000 gets 0x0, remains CR
[80006b4, 80006dc]   7-th(total   7-th) 	pm_w *0x40022000 = 0x2, remains CR
[80006b4, 80006dc]   7-th(total   9-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[80006b4, 80006dc]   8-th(total   8-th) 	pm_w *0x40021000 = 0x40001, remains CR+SR
[80006b4, 80006dc]   8-th(total  10-th) 	pm_r *0x40021000 gets 0x40001, remains CR+SR
[80006b4, 80006dc]   9-th(total   9-th) 	pm_w *0x40021000 = 0x50001, remains CR+SR
[80006b4, 80006dc]   9-th(total  11-th) 	pm_r *0x40021000 gets 0x50001, remains CR+SR
[80006d6, 80006dc]  10-th(total  12-th) 	pm_r *0x40021000 gets 0x20000, remains CR+SR
[80006dc, 80006f6]  11-th(total  13-th) 	pm_r *0x40021004 gets 0x0, remains CR+SR
[80006dc, 80006f6]  10-th(total  10-th) 	pm_w *0x40021004 = 0x1d0000, remains CR+SR
[80006dc, 80006f6]  12-th(total  14-th) 	pm_r *0x40021000 gets 0x50001, remains CR+SR
[80006dc, 80006f6]  11-th(total  11-th) 	pm_w *0x40021000 = 0x1050001, remains CR+SR
[80006dc, 80006f6]  13-th(total  15-th) 	pm_r *0x40021000 gets 0x1050001, remains CR+SR
[80006f0, 80006f6]  14-th(total  16-th) 	pm_r *0x40021000 gets 0x2000000, remains CR+SR
[80006f6, 8000714]  15-th(total  17-th) 	pm_r *0x40021004 gets 0x1d0000, remains CR+SR
[80006f6, 8000714]  12-th(total  12-th) 	pm_w *0x40021004 = 0x1d0000, remains CR+SR
[80006f6, 8000714]  16-th(total  18-th) 	pm_r *0x40021004 gets 0x1d0000, remains CR+SR
[80006f6, 8000714]  13-th(total  13-th) 	pm_w *0x40021004 = 0x1d0002, remains CR+SR
[80006f6, 8000714]  17-th(total  19-th) 	pm_r *0x40021004 gets 0x1d0002, remains CR+SR
[800070a, 8000714]  18-th(total  20-th) 	pm_r *0x40021004 gets 0x8, remains CR+SR
[8000714, 800072e]  19-th(total  21-th) 	pm_r *0x40021004 gets 0x1d0002, remains CR+SR
[8000714, 800072e]  14-th(total  14-th) 	pm_w *0x40021004 = 0x1d0402, remains CR+SR
[8000714, 800072e]  20-th(total  22-th) 	pm_r *0x40021004 gets 0x1d0402, remains CR+SR
[8000714, 800072e]  15-th(total  15-th) 	pm_w *0x40021004 = 0x1d0402, remains CR+SR
[80002d8, 80002ee]  21-th(total  23-th) 	pm_r *0x40021018 gets 0x0, remains CR
[80002d8, 80002ee]  16-th(total  16-th) 	pm_w *0x40021018 = 0x4, remains CR
[80002d8, 80002ee]  22-th(total  24-th) 	pm_r *0x40021018 gets 0x4, remains CR
[80002f4, 8000322]  23-th(total  25-th) 	pm_r *0x40010800 gets 0x0, remains CR
[80002f4, 8000322]  17-th(total  17-th) 	pm_w *0x40010800 = 0x100000, remains CR
[8000752, 8000758]  18-th(total  18-th) 	pm_w *0x40010814 = 0x20, remains DR
[80002d8, 80002ee]  24-th(total  26-th) 	pm_r *0x40021018 gets 0x4, remains CR
[80002d8, 80002ee]  19-th(total  19-th) 	pm_w *0x40021018 = 0x14, remains CR
[80002d8, 80002ee]  25-th(total  27-th) 	pm_r *0x40021018 gets 0x14, remains CR
[80002f4, 8000322]  26-th(total  28-th) 	pm_r *0x40011004 gets 0x0, remains CR
[80002f4, 8000322]  20-th(total  20-th) 	pm_w *0x40011004 = 0x800000, remains CR
[80002d8, 80002ee]  27-th(total  29-th) 	pm_r *0x40021018 gets 0x14, remains CR
[80002d8, 80002ee]  21-th(total  21-th) 	pm_w *0x40021018 = 0x15, remains CR
[80002d8, 80002ee]  28-th(total  30-th) 	pm_r *0x40021018 gets 0x15, remains CR
[80005e8, 8000626]  29-th(total  31-th) 	pm_r *0x40010014 gets 0x0, remains CR
[80005e8, 8000626]  22-th(total  22-th) 	pm_w *0x40010014 = 0x20, remains CR
[80005e8, 8000626]  30-th(total  32-th) 	pm_r *0x40010400 gets 0x0, remains CR
[80005e8, 8000626]  23-th(total  23-th) 	pm_w *0x40010400 = 0x2000, remains CR
[80005e8, 8000626]  31-th(total  33-th) 	pm_r *0x4001040c gets 0x0, remains CR
[80005e8, 8000626]  24-th(total  24-th) 	pm_w *0x4001040c = 0x2000, remains CR
[8000324, 80003c4]  32-th(total  34-th) 	pm_r *0x40021014 gets 0x0, remains CR
[8000324, 80003c4]  25-th(total  25-th) 	pm_w *0x40021014 = 0x1, remains CR
[8000324, 80003c4]  33-th(total  35-th) 	pm_r *0x40021014 gets 0x1, remains CR
[8000324, 80003c4]  34-th(total  36-th) 	pm_r *0x40020080 gets 0x0, remains CR
[8000324, 80003c4]  26-th(total  26-th) 	pm_w *0x40020080 = 0x2080, remains CR
[8000324, 80003c4]  35-th(total  37-th) 	pm_r *0x40020084 gets 0x0, remains CR
[8000324, 80003c4]  27-th(total  27-th) 	pm_w *0x40020084 = 0x7, remains CR
[8000324, 80003c4]  36-th(total  38-th) 	pm_r *0x40020080 gets 0x2080, remains CR
[8000324, 80003c4]  28-th(total  28-th) 	pm_w *0x40020088 = 0x40005410, remains DR
Potential DMA Descriptor V1: base *0x40020000 p_A:*0x4002008c->*0x20000030 
DMA Descriptor pair V2: *0x40020000 p_A:*0x40020088->*0x40005410 p_B:*0x4002008c->*0x20000030 
[8000324, 80003c4]  29-th(total  29-th) 	pm_w *0x4002008c = 0x20000030, remains DR
[8000324, 80003c4]  37-th(total  39-th) 	pm_r *0x4002006c gets 0x0, remains CR
[8000324, 80003c4]  30-th(total  30-th) 	pm_w *0x4002006c = 0x2090, remains CR
[8000324, 80003c4]  38-th(total  40-th) 	pm_r *0x40020070 gets 0x0, remains CR
[8000324, 80003c4]  31-th(total  31-th) 	pm_w *0x40020070 = 0x7, remains CR
[8000324, 80003c4]  39-th(total  41-th) 	pm_r *0x4002006c gets 0x2090, remains CR
Potential DMA Descriptor V1: base *0x40020000 p_A:*0x40020078->*0x2000000d 
[8000324, 80003c4]  32-th(total  32-th) 	pm_w *0x40020078 = 0x2000000d, remains DR
DMA Descriptor pair V2: *0x40020000 p_A:*0x40020078->*0x2000000d p_B:*0x40020074->*0x40005410 
[8000324, 80003c4]  33-th(total  33-th) 	pm_w *0x40020074 = 0x40005410, remains DR
[80003c4, 80003e8]  40-th(total  42-th) 	pm_r *0x40020080 gets 0x2080, remains CR
[80003c4, 80003e8]  34-th(total  34-th) 	pm_w *0x40020080 = 0x2082, remains CR
[80003c4, 80003e8]  41-th(total  43-th) 	pm_r *0x40020080 gets 0x2082, remains CR
[80003c4, 80003e8]  35-th(total  35-th) 	pm_w *0x40020080 = 0x208a, remains CR
[80003c4, 80003e8]  42-th(total  44-th) 	pm_r *0x4002006c gets 0x2090, remains CR
[80003c4, 80003e8]  36-th(total  36-th) 	pm_w *0x4002006c = 0x2092, remains CR
[80003c4, 80003e8]  43-th(total  45-th) 	pm_r *0x4002006c gets 0x2092, remains CR
[80003c4, 80003e8]  37-th(total  37-th) 	pm_w *0x4002006c = 0x209a, remains CR
[80002d8, 80002ee]  44-th(total  46-th) 	pm_r *0x40021018 gets 0x15, remains CR
[80002d8, 80002ee]  38-th(total  38-th) 	pm_w *0x40021018 = 0x1d, remains CR
[80002d8, 80002ee]  45-th(total  47-th) 	pm_r *0x40021018 gets 0x1d, remains CR
[8000412, 8000434]  46-th(total  48-th) 	pm_r *0x4002101c gets 0x0, remains CR
[8000412, 8000434]  39-th(total  39-th) 	pm_w *0x4002101c = 0x200000, remains CR
[8000412, 8000434]  47-th(total  49-th) 	pm_r *0x4002101c gets 0x200000, remains CR
[80002f4, 8000322]  48-th(total  50-th) 	pm_r *0x40010c00 gets 0x0, remains CR
[80002f4, 8000322]  40-th(total  40-th) 	pm_w *0x40010c00 = 0x9000000, remains CR
[8000434, 80004aa]  49-th(total  51-th) 	pm_r *0x40010c00 gets 0x9000000, remains CR
[8000434, 80004aa]  41-th(total  41-th) 	pm_w *0x40010c00 = 0xf000000, remains CR
[8000434, 80004aa]  50-th(total  52-th) 	pm_r *0x40010c0c gets 0x0, remains CR
[8000434, 80004aa]  42-th(total  42-th) 	pm_w *0x40010c0c = 0x40, remains CR
[80002f4, 8000322]  51-th(total  53-th) 	pm_r *0x40010c00 gets 0xf000000, remains CR
[80002f4, 8000322]  43-th(total  43-th) 	pm_w *0x40010c00 = 0x9f000000, remains CR
[80004aa, 800051c]  52-th(total  54-th) 	pm_r *0x40010c00 gets 0x9f000000, remains CR
[80004aa, 800051c]  44-th(total  44-th) 	pm_w *0x40010c00 = 0xff000000, remains CR
[80004aa, 800051c]  53-th(total  55-th) 	pm_r *0x40010c0c gets 0x40, remains CR
[80004aa, 800051c]  45-th(total  45-th) 	pm_w *0x40010c0c = 0xc0, remains CR
[80004aa, 800051c]  54-th(total  56-th) 	pm_r *0x40005400 gets 0x0, remains CR
[80004aa, 800051c]  46-th(total  46-th) 	pm_w *0x40005400 = 0x0, remains CR
[8000214, 8000220]  55-th(total  57-th) 	pm_r *0x40021004 gets 0x1d0402, remains CR+SR
[8000198, 80001a8]  56-th(total  58-th) 	pm_r *0x40021004 gets 0x1d0402, remains CR+SR
[80001b0, 80001c0]  57-th(total  59-th) 	pm_r *0x40021004 gets 0x1d0402, remains CR+SR
[80001c8, 80001d8]  58-th(total  60-th) 	pm_r *0x40021004 gets 0x1d0402, remains CR+SR
[800051c, 8000550]  59-th(total  61-th) 	pm_r *0x40005404 gets 0x0, remains CR
[800051c, 8000550]  47-th(total  47-th) 	pm_w *0x40005404 = 0x4, remains CR
[800051c, 8000550]  60-th(total  62-th) 	pm_r *0x40005420 gets 0x0, remains CR
[800051c, 8000550]  48-th(total  48-th) 	pm_w *0x40005420 = 0x2, remains CR
[8000550, 800056e]  61-th(total  63-th) 	pm_r *0x4000541c gets 0x0, remains CR
[8000550, 800056e]  49-th(total  49-th) 	pm_w *0x4000541c = 0x8003, remains CR
[8000550, 800056e]  62-th(total  64-th) 	pm_r *0x40005404 gets 0x4, remains CR
[8000550, 800056e]  50-th(total  50-th) 	pm_w *0x40005404 = 0x804, remains CR
[8000760, 8000766]  51-th(total  51-th) 	pm_w *0x40010814 = 0x20, remains DR
[8000584, 8000590]  63-th(total  65-th) 	pm_r *0x40005400 gets 0x0, remains CR
[8000584, 8000590]  52-th(total  52-th) 	pm_w *0x40005400 = 0x1, remains CR
[800063c, 8000660]  64-th(total  66-th) 	pm_r *0x4002006c gets 0x209a, remains CR
[800063c, 8000660]  53-th(total  53-th) 	pm_w *0x4002006c = 0x209b, remains CR
[800063c, 8000660]  65-th(total  67-th) 	pm_r *0x40005400 gets 0x1, remains CR
[800063c, 8000660]  54-th(total  54-th) 	pm_w *0x40005400 = 0x401, remains CR
[800063c, 8000660]  66-th(total  68-th) 	pm_r *0x40005400 gets 0x401, remains CR
[800063c, 8000660]  55-th(total  55-th) 	pm_w *0x40005400 = 0x501, remains CR
[800063c, 8000660]  67-th(total  69-th) 	pm_r *0x40005414 gets 0x1, remains SR
[8000660, 8000674]  68-th(total  70-th) 	pm_r *0x40005410 gets 0x0, remains CR
[8000660, 8000674]  56-th(total  56-th) 	pm_w *0x40005410 = 0x5a, remains CR
[8000660, 8000674]  69-th(total  71-th) 	pm_r *0x40005414 gets 0x2, remains SR
[8000674, 8000688]  70-th(total  72-th) 	pm_r *0x40005414 gets 0x0, remains SR
[8000674, 8000688]  71-th(total  73-th) 	pm_r *0x40005418 gets 0x0, remains DR
Taking exception 5 [IRQ]
	bbl_cnt 30000: Acknowledged IRQ -1
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 30001: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 60000: Acknowledged IRQ 40
[80007b4, 80007bc]  72-th(total  74-th) 	pm_r *0x40010414 gets 0x1, remains SR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 60002: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 90000: Acknowledged IRQ 17
stage_termination

