
(process:1197343): GLib-WARNING **: 01:47:39.722: ../../../../glib/gmem.c:489: custom memory allocation vtable not supported

GNU ARM Eclipse 64-bits QEMU v2.3.50 (qemu-system-gnuarmeclipse).
Board: 'Nordic_NRF52832' (Nordic NRF52832 minimum development board).
Device: 'NRF52832' (Cortex-M4 r0p0, MPU), Flash: 512 kB, RAM: 64 kB.
Image: '/projects/VeRa/Evaluation/ARM/Unit-Test/Firmware/Binaries-DICE/NRF52832_console_bleprph.elf'.
Command line: (none).
[0, 0]   1-th(total   1-th) 	unassigned mem_r *0x0
[0, 0]   2-th(total   2-th) 	unassigned mem_r *0x4
Load 160728 bytes at 0x00000000-0x000273D7.
Load   1080 bytes at 0x000273D8-0x0002780F.
Load      0 bytes at 0x20000000-0x1FFFFFFF.
Cortex-M4 r0p0 core initialised.
QEMU 2.3.50 monitor - type 'help' for more information
(qemu) QEMU 2.3.50 monitor - type 'help' for more information
(qemu) Cortex-M4 r0p0 core reset.
[562, 570]   3-th(total   3-th) 	unassigned mem_r *0x1000120c
[194, 1a0]   1-th(total   1-th) 	pm_w *0x40000578 = 0x1, remains SR
gic_dist_writeb: Bad offset 460
gic_dist_writeb: Bad offset 461
gic_dist_writeb: Bad offset 462
gic_dist_writeb: Bad offset 463
gic_dist_writeb: Bad offset 464
gic_dist_writeb: Bad offset 465
gic_dist_writeb: Bad offset 466
gic_dist_writeb: Bad offset 467
gic_dist_writeb: Bad offset 468
gic_dist_writeb: Bad offset 469
gic_dist_writeb: Bad offset 46a
gic_dist_writeb: Bad offset 46b
gic_dist_writeb: Bad offset 46c
gic_dist_writeb: Bad offset 46d
gic_dist_writeb: Bad offset 46e
gic_dist_writeb: Bad offset 46f
gic_dist_writeb: Bad offset 470
gic_dist_writeb: Bad offset 471
gic_dist_writeb: Bad offset 472
gic_dist_writeb: Bad offset 473
gic_dist_writeb: Bad offset 474
gic_dist_writeb: Bad offset 475
gic_dist_writeb: Bad offset 476
gic_dist_writeb: Bad offset 477
gic_dist_writeb: Bad offset 478
gic_dist_writeb: Bad offset 479
gic_dist_writeb: Bad offset 47a
gic_dist_writeb: Bad offset 47b
gic_dist_writeb: Bad offset 47c
gic_dist_writeb: Bad offset 47d
gic_dist_writeb: Bad offset 47e
gic_dist_writeb: Bad offset 47f
gic_dist_writeb: Bad offset 480
gic_dist_writeb: Bad offset 481
gic_dist_writeb: Bad offset 482
gic_dist_writeb: Bad offset 483
gic_dist_writeb: Bad offset 484
gic_dist_writeb: Bad offset 485
gic_dist_writeb: Bad offset 486
gic_dist_writeb: Bad offset 487
gic_dist_writeb: Bad offset 488
gic_dist_writeb: Bad offset 489
gic_dist_writeb: Bad offset 48a
gic_dist_writeb: Bad offset 48b
gic_dist_writeb: Bad offset 48c
gic_dist_writeb: Bad offset 48d
gic_dist_writeb: Bad offset 48e
gic_dist_writeb: Bad offset 48f
gic_dist_writeb: Bad offset 490
gic_dist_writeb: Bad offset 491
gic_dist_writeb: Bad offset 492
gic_dist_writeb: Bad offset 493
gic_dist_writeb: Bad offset 494
gic_dist_writeb: Bad offset 495
gic_dist_writeb: Bad offset 496
gic_dist_writeb: Bad offset 497
gic_dist_writeb: Bad offset 498
gic_dist_writeb: Bad offset 499
gic_dist_writeb: Bad offset 49a
gic_dist_writeb: Bad offset 49b
gic_dist_writeb: Bad offset 49c
gic_dist_writeb: Bad offset 49d
gic_dist_writeb: Bad offset 49e
gic_dist_writeb: Bad offset 49f
gic_dist_writeb: Bad offset 4a0
gic_dist_writeb: Bad offset 4a1
gic_dist_writeb: Bad offset 4a2
gic_dist_writeb: Bad offset 4a3
gic_dist_writeb: Bad offset 4a4
gic_dist_writeb: Bad offset 4a5
gic_dist_writeb: Bad offset 4a6
gic_dist_writeb: Bad offset 4a7
gic_dist_writeb: Bad offset 4a8
gic_dist_writeb: Bad offset 4a9
gic_dist_writeb: Bad offset 4aa
gic_dist_writeb: Bad offset 4ab
gic_dist_writeb: Bad offset 4ac
gic_dist_writeb: Bad offset 4ad
gic_dist_writeb: Bad offset 4ae
gic_dist_writeb: Bad offset 4af
gic_dist_writeb: Bad offset 4b0
gic_dist_writeb: Bad offset 4b1
gic_dist_writeb: Bad offset 4b2
gic_dist_writeb: Bad offset 4b3
gic_dist_writeb: Bad offset 4b4
gic_dist_writeb: Bad offset 4b5
gic_dist_writeb: Bad offset 4b6
gic_dist_writeb: Bad offset 4b7
gic_dist_writeb: Bad offset 4b8
gic_dist_writeb: Bad offset 4b9
gic_dist_writeb: Bad offset 4ba
gic_dist_writeb: Bad offset 4bb
gic_dist_writeb: Bad offset 4bc
gic_dist_writeb: Bad offset 4bd
gic_dist_writeb: Bad offset 4be
gic_dist_writeb: Bad offset 4bf
gic_dist_writeb: Bad offset 4c0
gic_dist_writeb: Bad offset 4c1
gic_dist_writeb: Bad offset 4c2
gic_dist_writeb: Bad offset 4c3
gic_dist_writeb: Bad offset 4c4
gic_dist_writeb: Bad offset 4c5
gic_dist_writeb: Bad offset 4c6
gic_dist_writeb: Bad offset 4c7
gic_dist_writeb: Bad offset 4c8
gic_dist_writeb: Bad offset 4c9
gic_dist_writeb: Bad offset 4ca
gic_dist_writeb: Bad offset 4cb
gic_dist_writeb: Bad offset 4cc
gic_dist_writeb: Bad offset 4cd
gic_dist_writeb: Bad offset 4ce
gic_dist_writeb: Bad offset 4cf
gic_dist_writeb: Bad offset 4d0
gic_dist_writeb: Bad offset 4d1
gic_dist_writeb: Bad offset 4d2
gic_dist_writeb: Bad offset 4d3
gic_dist_writeb: Bad offset 4d4
gic_dist_writeb: Bad offset 4d5
gic_dist_writeb: Bad offset 4d6
gic_dist_writeb: Bad offset 4d7
gic_dist_writeb: Bad offset 4d8
gic_dist_writeb: Bad offset 4d9
gic_dist_writeb: Bad offset 4da
gic_dist_writeb: Bad offset 4db
gic_dist_writeb: Bad offset 4dc
gic_dist_writeb: Bad offset 4dd
gic_dist_writeb: Bad offset 4de
gic_dist_writeb: Bad offset 4df
gic_dist_writeb: Bad offset 4e0
gic_dist_writeb: Bad offset 4e1
gic_dist_writeb: Bad offset 4e2
gic_dist_writeb: Bad offset 4e3
gic_dist_writeb: Bad offset 4e4
gic_dist_writeb: Bad offset 4e5
gic_dist_writeb: Bad offset 4e6
gic_dist_writeb: Bad offset 4e7
gic_dist_writeb: Bad offset 4e8
gic_dist_writeb: Bad offset 4e9
gic_dist_writeb: Bad offset 4ea
gic_dist_writeb: Bad offset 4eb
gic_dist_writeb: Bad offset 4ec
gic_dist_writeb: Bad offset 4ed
gic_dist_writeb: Bad offset 4ee
gic_dist_writeb: Bad offset 4ef
NVIC: SCR and CCR unimplemented
[14490, 144a0]   2-th(total   2-th) 	pm_w *0x4001050c = 0x1, remains SR
[144a0, 144e4]   3-th(total   3-th) 	pm_w *0x40010504 = 0xf0000, remains SR
[144a0, 144e4]   1-th(total   4-th) 	pm_r *0x40010508 gets 0x0, remains SR
[144a0, 144e4]   4-th(total   4-th) 	pm_w *0x40010508 = 0x1, remains SR
[1dc, 1ee]   2-th(total   5-th) 	pm_r *0x40000418 gets 0x10001, remains SR
bbl_cnt 5887: Disabled IRQ 11
[14868, 1488a]   5-th(total   5-th) 	pm_w *0x4000b004 = 0x1, remains SR
[14868, 1488a]   6-th(total   6-th) 	pm_w *0x4000b008 = 0x1, remains SR
[14868, 1488a]   7-th(total   7-th) 	pm_w *0x4000b508 = 0x0, remains SR
[14868, 1488a]   8-th(total   8-th) 	pm_w *0x4000b104 = 0x0, remains SR
[14868, 1488a]   9-th(total   9-th) 	pm_w *0x4000b304 = 0x2, remains SR
[14868, 1488a]  10-th(total  10-th) 	pm_w *0x4000b000 = 0x1, remains SR
[23e50, 23e7e]  11-th(total  11-th) 	pm_w *0x4000250c = 0x6, remains CR
[23e50, 23e7e]  12-th(total  12-th) 	pm_w *0x40002514 = 0x8, remains CR
[23e50, 23e7e]  13-th(total  13-th) 	pm_w *0x40002508 = 0x5, remains SR
[23e50, 23e7e]  14-th(total  14-th) 	pm_w *0x40002510 = 0x7, remains SR
[14508, 14514]  15-th(total  15-th) 	pm_w *0x40010304 = 0x1, remains SR
[14508, 14514]  16-th(total  16-th) 	pm_w *0x40010000 = 0x1, remains SR
Taking exception 2 [SVC]
Taking exception 5 [IRQ]
	bbl_cnt 5972: Acknowledged IRQ -5
[14400, 14440]  17-th(total  17-th) 	pm_w *0x40011004 = 0x1, remains SR
[14400, 14440]  18-th(total  18-th) 	pm_w *0x40011008 = 0x1, remains SR
[14400, 14440]  19-th(total  19-th) 	pm_w *0x40011348 = 0xffffffff, remains SR
[14400, 14440]  20-th(total  20-th) 	pm_w *0x40011308 = 0xffffffff, remains SR
[14400, 14440]  21-th(total  21-th) 	pm_w *0x40011304 = 0x80000, remains SR
[14400, 14440]  22-th(total  22-th) 	pm_w *0x4001114c = 0x0, remains SR
[14400, 14440]  23-th(total  23-th) 	pm_w *0x4001154c = 0x100, remains SR
[14400, 14440]  24-th(total  24-th) 	pm_w *0x40011000 = 0x1, remains SR
Taking exception 8 [QEMU v7M exception exit]
M profile return from interrupt with misaligned PC is UNPREDICTABLE
	bbl_cnt 5996: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 5996: Acknowledged IRQ -2
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 5997: EXCP/ISR exits
[23eca, 23f12]  25-th(total  25-th) 	pm_w *0x40002500 = 0x0, remains SR
[23eca, 23f12]  26-th(total  26-th) 	pm_w *0x40002308 = 0xffffffff, remains SR
[23eca, 23f12]  27-th(total  27-th) 	pm_w *0x40002524 = 0x1d60000, remains SR
[23eca, 23f12]  28-th(total  28-th) 	pm_w *0x4000256c = 0x0, remains SR
[23eca, 23f12]  29-th(total  29-th) 	pm_w *0x40002500 = 0x8, remains SR
[23eca, 23f12]  30-th(total  30-th) 	pm_w *0x40002304 = 0x10, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002534->*0x20003221 
[23eca, 23f12]  31-th(total  31-th) 	pm_w *0x40002534 = 0x20003221, remains SR
[23eca, 23f12]  32-th(total  32-th) 	pm_w *0x40002538 = 0x1, remains SR
[23eca, 23f12]  33-th(total  33-th) 	pm_w *0x40002000 = 0x1, remains SR
[140ec, 140f6]   3-th(total   6-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[14118, 14124]  34-th(total  34-th) 	pm_w *0x4001e504 = 0x2, turns UC into SR
[140ec, 140f6]   4-th(total   7-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[14138, 14142]  35-th(total  35-th) 	pm_w *0x4001e508 = 0x7d000, turns UC into SR
[140ec, 140f6]   5-th(total   8-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[1412a, 14134]  36-th(total  36-th) 	pm_w *0x4001e504 = 0x0, remains SR
[140ec, 140f6]   6-th(total   9-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[14118, 14124]  37-th(total  37-th) 	pm_w *0x4001e504 = 0x2, remains SR
[140ec, 140f6]   7-th(total  10-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[14138, 14142]  38-th(total  38-th) 	pm_w *0x4001e508 = 0x7e000, remains SR
[140ec, 140f6]   8-th(total  11-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[1412a, 14134]  39-th(total  39-th) 	pm_w *0x4001e504 = 0x0, remains SR
[140ec, 140f6]   9-th(total  12-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[14118, 14124]  40-th(total  40-th) 	pm_w *0x4001e504 = 0x2, remains SR
[140ec, 140f6]  10-th(total  13-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[14138, 14142]  41-th(total  41-th) 	pm_w *0x4001e508 = 0x7f000, remains SR
[140ec, 140f6]  11-th(total  14-th) 	pm_r *0x4001e400 gets 0x1, remains SR
[1412a, 14134]  42-th(total  42-th) 	pm_w *0x4001e504 = 0x0, remains SR
[23e20, 23e40]  43-th(total  43-th) 	pm_w *0x40002120 = 0x0, turns UC into SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c77 
[23e20, 23e40]  44-th(total  44-th) 	pm_w *0x40002544 = 0x20000c77, turns UC into SR
[23e20, 23e40]  45-th(total  45-th) 	pm_w *0x40002548 = 0x1, turns UC into SR
[23e20, 23e40]  46-th(total  46-th) 	pm_w *0x40002008 = 0x1, turns UC into SR
[23e20, 23e40]  47-th(total  47-th) 	pm_w *0x4000200c = 0x1, turns UC into SR
[23e20, 23e40]  48-th(total  48-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c77 
Pointer updated: address: 0x40002544 preval: 0x20000c77 val: 0x20000c77 
[23e20, 23e40]  49-th(total  49-th) 	pm_w *0x40002544 = 0x20000c77, remains SR
[23e20, 23e40]  50-th(total  50-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  51-th(total  51-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  52-th(total  52-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  53-th(total  53-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c77 
Pointer updated: address: 0x40002544 preval: 0x20000c77 val: 0x20000c77 
[23e20, 23e40]  54-th(total  54-th) 	pm_w *0x40002544 = 0x20000c77, remains SR
[23e20, 23e40]  55-th(total  55-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  56-th(total  56-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  57-th(total  57-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  58-th(total  58-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c77 
Pointer updated: address: 0x40002544 preval: 0x20000c77 val: 0x20000c77 
[23e20, 23e40]  59-th(total  59-th) 	pm_w *0x40002544 = 0x20000c77, remains SR
[23e20, 23e40]  60-th(total  60-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  61-th(total  61-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  62-th(total  62-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  63-th(total  63-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c77 
Pointer updated: address: 0x40002544 preval: 0x20000c77 val: 0x20000c77 
[23e20, 23e40]  64-th(total  64-th) 	pm_w *0x40002544 = 0x20000c77, remains SR
[23e20, 23e40]  65-th(total  65-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  66-th(total  66-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  67-th(total  67-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  68-th(total  68-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c77 
Pointer updated: address: 0x40002544 preval: 0x20000c77 val: 0x20000c77 
[23e20, 23e40]  69-th(total  69-th) 	pm_w *0x40002544 = 0x20000c77, remains SR
[23e20, 23e40]  70-th(total  70-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  71-th(total  71-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  72-th(total  72-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  73-th(total  73-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c8f 
Pointer updated: address: 0x40002544 preval: 0x20000c77 val: 0x20000c8f 
[23e20, 23e40]  74-th(total  74-th) 	pm_w *0x40002544 = 0x20000c8f, remains SR
[23e20, 23e40]  75-th(total  75-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  76-th(total  76-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  77-th(total  77-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  78-th(total  78-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000c8f val: 0x20000ca7 
[23e20, 23e40]  79-th(total  79-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40]  80-th(total  80-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  81-th(total  81-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  82-th(total  82-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  83-th(total  83-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40]  84-th(total  84-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40]  85-th(total  85-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  86-th(total  86-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  87-th(total  87-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  88-th(total  88-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40]  89-th(total  89-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40]  90-th(total  90-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  91-th(total  91-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  92-th(total  92-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  93-th(total  93-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40]  94-th(total  94-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40]  95-th(total  95-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40]  96-th(total  96-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40]  97-th(total  97-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40]  98-th(total  98-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40]  99-th(total  99-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 100-th(total 100-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 101-th(total 101-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 102-th(total 102-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 103-th(total 103-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40] 104-th(total 104-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 105-th(total 105-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 106-th(total 106-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 107-th(total 107-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 108-th(total 108-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40] 109-th(total 109-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 110-th(total 110-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 111-th(total 111-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 112-th(total 112-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 113-th(total 113-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40] 114-th(total 114-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 115-th(total 115-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 116-th(total 116-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 117-th(total 117-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 118-th(total 118-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40] 119-th(total 119-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 120-th(total 120-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 121-th(total 121-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 122-th(total 122-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 123-th(total 123-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40] 124-th(total 124-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 125-th(total 125-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 126-th(total 126-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 127-th(total 127-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 128-th(total 128-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40] 129-th(total 129-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 130-th(total 130-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 131-th(total 131-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 132-th(total 132-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 133-th(total 133-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c8f 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000c8f 
[23e20, 23e40] 134-th(total 134-th) 	pm_w *0x40002544 = 0x20000c8f, remains SR
[23e20, 23e40] 135-th(total 135-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 136-th(total 136-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 137-th(total 137-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 138-th(total 138-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c8f 
Pointer updated: address: 0x40002544 preval: 0x20000c8f val: 0x20000c8f 
[23e20, 23e40] 139-th(total 139-th) 	pm_w *0x40002544 = 0x20000c8f, remains SR
[23e20, 23e40] 140-th(total 140-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 141-th(total 141-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 142-th(total 142-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 143-th(total 143-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c8f 
Pointer updated: address: 0x40002544 preval: 0x20000c8f val: 0x20000c8f 
[23e20, 23e40] 144-th(total 144-th) 	pm_w *0x40002544 = 0x20000c8f, remains SR
[23e20, 23e40] 145-th(total 145-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 146-th(total 146-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 147-th(total 147-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 148-th(total 148-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c8f 
Pointer updated: address: 0x40002544 preval: 0x20000c8f val: 0x20000c8f 
[23e20, 23e40] 149-th(total 149-th) 	pm_w *0x40002544 = 0x20000c8f, remains SR
[23e20, 23e40] 150-th(total 150-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 151-th(total 151-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 152-th(total 152-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 153-th(total 153-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000c8f 
Pointer updated: address: 0x40002544 preval: 0x20000c8f val: 0x20000c8f 
[23e20, 23e40] 154-th(total 154-th) 	pm_w *0x40002544 = 0x20000c8f, remains SR
[23e20, 23e40] 155-th(total 155-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 156-th(total 156-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 157-th(total 157-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 158-th(total 158-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000c8f val: 0x20000ca7 
[23e20, 23e40] 159-th(total 159-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 160-th(total 160-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 161-th(total 161-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 162-th(total 162-th) 	pm_w *0x4000200c = 0x1, remains SR
[23e20, 23e40] 163-th(total 163-th) 	pm_w *0x40002120 = 0x0, remains SR
Potential DMA Descriptor V1: base *0x40002400 p_A:*0x40002544->*0x20000ca7 
Pointer updated: address: 0x40002544 preval: 0x20000ca7 val: 0x20000ca7 
[23e20, 23e40] 164-th(total 164-th) 	pm_w *0x40002544 = 0x20000ca7, remains SR
[23e20, 23e40] 165-th(total 165-th) 	pm_w *0x40002548 = 0x1, remains SR
[23e20, 23e40] 166-th(total 166-th) 	pm_w *0x40002008 = 0x1, remains SR
[23e20, 23e40] 167-th(total 167-th) 	pm_w *0x4000200c = 0x1, remains SR
NVIC: debug register 00000DF0 unimplemented
NVIC: debug register 00000DF0 unimplemented
AIRCR system reset unimplemented
stage_termination

