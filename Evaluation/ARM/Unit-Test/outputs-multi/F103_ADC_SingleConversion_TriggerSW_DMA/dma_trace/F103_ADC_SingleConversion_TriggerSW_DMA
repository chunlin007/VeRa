
(process:1168867): GLib-WARNING **: 01:38:57.189: ../../../../glib/gmem.c:489: custom memory allocation vtable not supported

GNU ARM Eclipse 64-bits QEMU v2.3.50 (qemu-system-gnuarmeclipse).
Board: 'NUCLEO-F103RB' (ST Nucleo Development Board for STM32 F1 series).
Device: 'STM32F103RB' (Cortex-M3 r0p1, MPU), Flash: 128 kB, RAM: 20 kB.
Image: '/projects/VeRa/Evaluation/ARM/Unit-Test/Firmware/Binaries-DICE/F103_ADC_SingleConversion_TriggerSW_DMA.elf'.
Command line: (none).
[0, 0]   1-th(total   1-th) 	unassigned mem_r *0x0
[0, 0]   2-th(total   2-th) 	unassigned mem_r *0x4
Load   1820 bytes at 0x08000000-0x0800071B.
Load      8 bytes at 0x0800071C-0x08000723.
Load      0 bytes at 0x08000724-0x08000723.
Cortex-M3 r0p1 core initialised.
QEMU 2.3.50 monitor - type 'help' for more information
(qemu) QEMU 2.3.50 monitor - type 'help' for more information
(qemu) Cortex-M3 r0p1 core reset.
[800014c, 800018a]   1-th(total   3-th) 	pm_r *0x40021000 gets 0x0, remains CR+SR
[800014c, 800018a]   1-th(total   1-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[800014c, 800018a]   2-th(total   4-th) 	pm_r *0x40021004 gets 0x0, remains CR+SR
[800014c, 800018a]   2-th(total   2-th) 	pm_w *0x40021004 = 0x0, remains CR+SR
[800014c, 800018a]   3-th(total   5-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[800014c, 800018a]   3-th(total   3-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[800014c, 800018a]   4-th(total   6-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[800014c, 800018a]   4-th(total   4-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[800014c, 800018a]   5-th(total   7-th) 	pm_r *0x40021004 gets 0x0, remains CR+SR
[800014c, 800018a]   5-th(total   5-th) 	pm_w *0x40021004 = 0x0, remains CR+SR
[800014c, 800018a]   6-th(total   6-th) 	pm_w *0x40021008 = 0x9f0000, remains DR
[80004c8, 80004f0]   6-th(total   8-th) 	pm_r *0x40022000 gets 0x0, remains CR
[80004c8, 80004f0]   7-th(total   7-th) 	pm_w *0x40022000 = 0x2, remains CR
[80004c8, 80004f0]   7-th(total   9-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[80004c8, 80004f0]   8-th(total   8-th) 	pm_w *0x40021000 = 0x40001, remains CR+SR
[80004c8, 80004f0]   8-th(total  10-th) 	pm_r *0x40021000 gets 0x40001, remains CR+SR
[80004c8, 80004f0]   9-th(total   9-th) 	pm_w *0x40021000 = 0x50001, remains CR+SR
[80004c8, 80004f0]   9-th(total  11-th) 	pm_r *0x40021000 gets 0x50001, remains CR+SR
[80004ea, 80004f0]  10-th(total  12-th) 	pm_r *0x40021000 gets 0x20000, remains CR+SR
[80004f0, 800050a]  11-th(total  13-th) 	pm_r *0x40021004 gets 0x0, remains CR+SR
[80004f0, 800050a]  10-th(total  10-th) 	pm_w *0x40021004 = 0x1d0000, remains CR+SR
[80004f0, 800050a]  12-th(total  14-th) 	pm_r *0x40021000 gets 0x50001, remains CR+SR
[80004f0, 800050a]  11-th(total  11-th) 	pm_w *0x40021000 = 0x1050001, remains CR+SR
[80004f0, 800050a]  13-th(total  15-th) 	pm_r *0x40021000 gets 0x1050001, remains CR+SR
[8000504, 800050a]  14-th(total  16-th) 	pm_r *0x40021000 gets 0x2000000, remains CR+SR
[800050a, 8000528]  15-th(total  17-th) 	pm_r *0x40021004 gets 0x1d0000, remains CR+SR
[800050a, 8000528]  12-th(total  12-th) 	pm_w *0x40021004 = 0x1d0000, remains CR+SR
[800050a, 8000528]  16-th(total  18-th) 	pm_r *0x40021004 gets 0x1d0000, remains CR+SR
[800050a, 8000528]  13-th(total  13-th) 	pm_w *0x40021004 = 0x1d0002, remains CR+SR
[800050a, 8000528]  17-th(total  19-th) 	pm_r *0x40021004 gets 0x1d0002, remains CR+SR
[800051e, 8000528]  18-th(total  20-th) 	pm_r *0x40021004 gets 0x8, remains CR+SR
[8000528, 8000542]  19-th(total  21-th) 	pm_r *0x40021004 gets 0x1d0002, remains CR+SR
[8000528, 8000542]  14-th(total  14-th) 	pm_w *0x40021004 = 0x1d0402, remains CR+SR
[8000528, 8000542]  20-th(total  22-th) 	pm_r *0x40021004 gets 0x1d0402, remains CR+SR
[8000528, 8000542]  15-th(total  15-th) 	pm_w *0x40021004 = 0x1d0402, remains CR+SR
[8000220, 8000236]  21-th(total  23-th) 	pm_r *0x40021018 gets 0x0, remains CR
[8000220, 8000236]  16-th(total  16-th) 	pm_w *0x40021018 = 0x4, remains CR
[8000220, 8000236]  22-th(total  24-th) 	pm_r *0x40021018 gets 0x4, remains CR
[800023c, 800026a]  23-th(total  25-th) 	pm_r *0x40010800 gets 0x0, remains CR
[800023c, 800026a]  17-th(total  17-th) 	pm_w *0x40010800 = 0x100000, remains CR
[8000220, 8000236]  24-th(total  26-th) 	pm_r *0x40021018 gets 0x4, remains CR
[8000220, 8000236]  18-th(total  18-th) 	pm_w *0x40021018 = 0x14, remains CR
[8000220, 8000236]  25-th(total  27-th) 	pm_r *0x40021018 gets 0x14, remains CR
[800023c, 800026a]  26-th(total  28-th) 	pm_r *0x40011004 gets 0x0, remains CR
[800023c, 800026a]  19-th(total  19-th) 	pm_w *0x40011004 = 0x800000, remains CR
[8000460, 8000476]  27-th(total  29-th) 	pm_r *0x4001100c gets 0x0, remains CR
[8000460, 8000476]  20-th(total  20-th) 	pm_w *0x4001100c = 0x0, remains CR
[8000220, 8000236]  28-th(total  30-th) 	pm_r *0x40021018 gets 0x14, remains CR
[8000220, 8000236]  21-th(total  21-th) 	pm_w *0x40021018 = 0x15, remains CR
[8000220, 8000236]  29-th(total  31-th) 	pm_r *0x40021018 gets 0x15, remains CR
[8000476, 80004b4]  30-th(total  32-th) 	pm_r *0x40010014 gets 0x0, remains CR
[8000476, 80004b4]  22-th(total  22-th) 	pm_w *0x40010014 = 0x20, remains CR
[8000476, 80004b4]  31-th(total  33-th) 	pm_r *0x40010400 gets 0x0, remains CR
[8000476, 80004b4]  23-th(total  23-th) 	pm_w *0x40010400 = 0x2000, remains CR
[8000476, 80004b4]  32-th(total  34-th) 	pm_r *0x4001040c gets 0x0, remains CR
[8000476, 80004b4]  24-th(total  24-th) 	pm_w *0x4001040c = 0x2000, remains CR
[800026c, 80002de]  33-th(total  35-th) 	pm_r *0x40021014 gets 0x0, remains CR
[800026c, 80002de]  25-th(total  25-th) 	pm_w *0x40021014 = 0x1, remains CR
[800026c, 80002de]  34-th(total  36-th) 	pm_r *0x40021014 gets 0x1, remains CR
[800026c, 80002de]  35-th(total  37-th) 	pm_r *0x40020008 gets 0x0, remains CR
[800026c, 80002de]  26-th(total  26-th) 	pm_w *0x40020008 = 0x25a0, remains CR
[800026c, 80002de]  27-th(total  27-th) 	pm_w *0x40020010 = 0x4001244c, remains DR
Potential DMA Descriptor V1: base *0x40020000 p_A:*0x40020014->*0x2000002c 
DMA Descriptor pair V2: *0x40020000 p_A:*0x40020010->*0x4001244c p_B:*0x40020014->*0x2000002c 
[800026c, 80002de]  28-th(total  28-th) 	pm_w *0x40020014 = 0x2000002c, remains DR
[800026c, 80002de]  36-th(total  38-th) 	pm_r *0x4002000c gets 0x0, remains CR
[800026c, 80002de]  29-th(total  29-th) 	pm_w *0x4002000c = 0x4, remains CR
[800026c, 80002de]  37-th(total  39-th) 	pm_r *0x40020008 gets 0x25a0, remains CR
[800026c, 80002de]  30-th(total  30-th) 	pm_w *0x40020008 = 0x25a2, remains CR
[800026c, 80002de]  38-th(total  40-th) 	pm_r *0x40020008 gets 0x25a2, remains CR
[800026c, 80002de]  31-th(total  31-th) 	pm_w *0x40020008 = 0x25a6, remains CR
[800026c, 80002de]  39-th(total  41-th) 	pm_r *0x40020008 gets 0x25a6, remains CR
[800026c, 80002de]  32-th(total  32-th) 	pm_w *0x40020008 = 0x25ae, remains CR
[800026c, 80002de]  40-th(total  42-th) 	pm_r *0x40020008 gets 0x25ae, remains CR
[800026c, 80002de]  33-th(total  33-th) 	pm_w *0x40020008 = 0x25af, remains CR
[8000220, 8000236]  41-th(total  43-th) 	pm_r *0x40021018 gets 0x15, remains CR
[8000220, 8000236]  34-th(total  34-th) 	pm_w *0x40021018 = 0x15, remains CR
[8000220, 8000236]  42-th(total  44-th) 	pm_r *0x40021018 gets 0x15, remains CR
[800023c, 800026a]  43-th(total  45-th) 	pm_r *0x40010800 gets 0x100000, remains CR
[800023c, 800026a]  35-th(total  35-th) 	pm_w *0x40010800 = 0x100000, remains CR
[8000220, 8000236]  44-th(total  46-th) 	pm_r *0x40021018 gets 0x15, remains CR
[8000220, 8000236]  36-th(total  36-th) 	pm_w *0x40021018 = 0x215, remains CR
[8000220, 8000236]  45-th(total  47-th) 	pm_r *0x40021018 gets 0x215, remains CR
[800031e, 8000326]  46-th(total  48-th) 	pm_r *0x40012408 gets 0x0, remains CR+SR
[8000326, 8000372]  47-th(total  49-th) 	pm_r *0x40012408 gets 0x0, remains CR+SR
[8000326, 8000372]  37-th(total  37-th) 	pm_w *0x40012408 = 0xe0000, remains CR+SR
[8000326, 8000372]  48-th(total  50-th) 	pm_r *0x40012408 gets 0xe0000, remains CR+SR
[8000326, 8000372]  38-th(total  38-th) 	pm_w *0x40012408 = 0xe0000, remains CR+SR
[8000326, 8000372]  49-th(total  51-th) 	pm_r *0x40012408 gets 0xe0000, remains CR+SR
[8000326, 8000372]  39-th(total  39-th) 	pm_w *0x40012408 = 0xe0100, remains CR+SR
[8000326, 8000372]  50-th(total  52-th) 	pm_r *0x4001242c gets 0x0, remains CR
[8000326, 8000372]  40-th(total  40-th) 	pm_w *0x4001242c = 0x0, remains CR
[8000326, 8000372]  51-th(total  53-th) 	pm_r *0x40012434 gets 0x0, remains CR
[8000326, 8000372]  41-th(total  41-th) 	pm_w *0x40012434 = 0x4, remains CR
[8000326, 8000372]  52-th(total  54-th) 	pm_r *0x40012408 gets 0xe0100, remains CR+SR
[8000372, 80003be]  53-th(total  55-th) 	pm_r *0x40012410 gets 0x0, remains CR
[8000372, 80003be]  42-th(total  42-th) 	pm_w *0x40012410 = 0x4000, remains CR
[80003d4, 80003e2]  54-th(total  56-th) 	pm_r *0x40012408 gets 0xe0100, remains CR+SR
[80003e2, 80003f2]  55-th(total  57-th) 	pm_r *0x40012408 gets 0xe0100, remains CR+SR
[80003e2, 80003f2]  43-th(total  43-th) 	pm_w *0x40012408 = 0xe0101, remains CR+SR
[80003f2, 8000400]  56-th(total  58-th) 	pm_r *0x40012408 gets 0xe0101, remains CR+SR
[80003f2, 8000400]  44-th(total  44-th) 	pm_w *0x40012408 = 0xe0105, remains CR+SR
[80003f2, 8000400]  57-th(total  59-th) 	pm_r *0x40012408 gets 0xe0105, remains CR+SR
[80003fc, 8000400]  58-th(total  60-th) 	pm_r *0x40012408 gets 0x0, remains CR+SR
Taking exception 5 [IRQ]
	bbl_cnt 30000: Acknowledged IRQ -1
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 30001: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 60000: Acknowledged IRQ 40
[800065c, 8000666]  59-th(total  61-th) 	pm_r *0x40010414 gets 0x1, remains SR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 60002: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 90000: Acknowledged IRQ 11
[8000678, 8000682]  60-th(total  62-th) 	pm_r *0x40020000 gets 0x2, remains SR
[8000682, 800068a]  45-th(total  45-th) 	pm_w *0x40020004 = 0x2, remains DR
[80005b8, 80005ec]  46-th(total  46-th) 	pm_w *0x40010810 = 0x20, remains DR
[800068a, 8000690]  61-th(total  63-th) 	pm_r *0x40020000 gets 0x4, remains SR
[8000690, 8000698]  47-th(total  47-th) 	pm_w *0x40020004 = 0x4, remains DR

Access to DMA buffer base address: 0x2000002c beatsize: 2 number beats: 1 address: 0x2000002c 

Accessing and serving DMA buffer. address: 0x2000002c

Access to nearby area of DMA peri: 0x4001244c mem: 0x2000002c address: 0x2000002e beatsize: 2 number beats: 1 

New size of DMA buffer identified!! beats: 2 

Accessing and serving DMA buffer. address: 0x2000002e
[80005fc, 8000630]  48-th(total  48-th) 	pm_w *0x40010814 = 0x20, remains DR
[8000698, 80006a0]  62-th(total  64-th) 	pm_r *0x40020000 gets 0x1, remains SR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 90008: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 120000: Acknowledged IRQ 18
stage_termination

