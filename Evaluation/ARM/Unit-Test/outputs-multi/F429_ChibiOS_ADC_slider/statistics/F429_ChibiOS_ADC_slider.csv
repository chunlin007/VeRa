Base address,Reg address,Reg name,Reg cat,Model Cat,Read,Write,Correct cat,Comments GT
0x40000000,0x40000000,TIM1&TIM8 control register 1 (TIMx_CR1)  ,CR,DR,0,1,NO,
0x40000000,0x40000004,17.4.2TIM1&TIM8 control register 2 (TIMx_CR2)  ,CR,DR,0,1,NO,
0x40000000,0x4000000c,17.4.4TIM1&TIM8 DMA/interrupt enable register (TIMx_DIER)   ,CR,DR,1,1,NO,
0x40000000,0x40000010,18TIM1&TIM8 status register (TIMx_SR)   ,SR,DR,0,1,NO,
0x40000000,0x40000014,17.4.5TIM1&TIM8 event generation register (TIMx_EGR)   ,CR,DR,0,1,NO,
0x40000000,0x40000018,17.4.6TIM1&TIM8 capture/compare mode register 1 (TIMx_CCMR1)  ,CR,DR,0,1,NO,
0x40000000,0x40000024,17.4.10 TIM1&TIM8 counter (TIMx_CNT)   ,DR,DR,1,0,Yes,
0x40000000,0x40000028,17.4.11 TIM1&TIM8 prescaler (TIMx_PSC)  ,CR,DR,0,1,NO,
0x40000000,0x4000002c,17.4.12 TIM1&TIM8 auto-reload register (TIMx_ARR) ,CR,DR,0,1,NO,
0x40000000,0x40000034,17.4.14 TIM1&TIM8 capture/compare register 1 (TIMx_CCR1) ,DR,DR,0,1,Yes,|Hybrid, for capturing is read only DR, for comparison is CR|
0x40004800,0x40004800,Status register (USART_SR)  ,SR,DR,1,1,NO,
0x40004800,0x40004804,Data register (USART_DR)  ,DR,DR,1,0,Yes,
0x40004800,0x40004808,Baud rate register (USART_BRR)  ,CR,DR,0,1,NO,
0x40004800,0x4000480c,Control register 1 (USART_CR1) ,CR,DR,0,1,NO,
0x40004800,0x40004810,Control register 2 (USART_CR2) ,CR,DR,0,1,NO,
0x40004800,0x40004814,Control register 3 (USART_CR3) ,CR,DR,0,1,NO,
0x40007000,0x40007000,PWR power control register (PWR_CR)for STM32F405xx/07xx and STM32F415xx/17xx  ,CR,CR,1,1,Yes,
0x40007000,0x40007004,PWR power control/status register (PWR_CSR)for STM32F405xx/07xx and STM32F415xx/17xx  ,SR,C&SR,1,1,NO,HYBRID
0x40012000,0x40012000,13.13.1 ADC status register (ADC_SR)  ,SR,DR,0,1,NO,
0x40012000,0x40012004,13.13.2 ADC control register 1 (ADC_CR1)  ,CR,DR,0,1,NO,
0x40012000,0x40012008,13.13.3 ADC control register 2 (ADC_CR2)  ,CR,DR,0,1,NO,
0x40012000,0x4001200c,13.13.4 ADC sample time register 1 (ADC_SMPR1)  ,CR,DR,0,1,NO,
0x40012000,0x40012010,13.13.5 ADC sample time register 2 (ADC_SMPR2)  ,CR,DR,0,1,NO,
0x40012000,0x40012024,13.13.6 ADC injected channel data offset register x (ADC_JOFRx) (x=1..4)  . . 42113.13.7 ADC watchdog higher threshold register (ADC_HTR) ,DR,DR,0,1,Yes,
0x40012000,0x40012028,13.13.8 ADC watchdog lower threshold register (ADC_LTR) ,CR,DR,0,1,NO,
0x40012000,0x4001202c,13.13.9 ADC regular sequence register 1 (ADC_SQR1)  ,CR,DR,0,1,NO,
0x40012000,0x40012030,13.13.10 ADC regular sequence register 2 (ADC_SQR2)  ,CR,DR,0,1,NO,
0x40012000,0x40012034,13.13.11 ADC regular sequence register 3 (ADC_SQR3)  ,CR,DR,0,1,NO,
0x40012000,0x40012304,ADC common control register (ADC_CCR),CR,CR,1,1,Yes,
0x40020000,0x40020000,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,CR,1,1,Yes,
0x40020000,0x40020004,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,CR,1,1,Yes,
0x40020000,0x40020008,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,CR,1,1,Yes,
0x40020000,0x4002000c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,CR,1,1,Yes,
0x40020000,0x40020014,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,CR,1,1,NO,
0x40020000,0x40020020,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,CR,1,1,Yes,
0x40020000,0x40020024,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40020400,0x40020400,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40020400,0x40020404,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020400,0x40020408,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020400,0x4002040c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020400,0x40020414,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40020400,0x40020420,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40020400,0x40020424,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40020800,0x40020800,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40020800,0x40020804,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020800,0x40020808,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020800,0x4002080c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020800,0x40020814,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40020800,0x40020820,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40020800,0x40020824,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40020c00,0x40020c00,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40020c00,0x40020c04,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020c00,0x40020c08,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020c00,0x40020c0c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40020c00,0x40020c14,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40020c00,0x40020c20,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40020c00,0x40020c24,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40021000,0x40021000,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021000,0x40021004,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021000,0x40021008,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021000,0x4002100c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021000,0x40021014,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40021000,0x40021020,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021000,0x40021024,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40021400,0x40021400,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021400,0x40021404,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021400,0x40021408,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021400,0x4002140c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021400,0x40021414,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40021400,0x40021420,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021400,0x40021424,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40021800,0x40021800,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021800,0x40021804,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021800,0x40021808,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021800,0x4002180c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021800,0x40021814,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40021800,0x40021820,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021800,0x40021824,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40021c00,0x40021c00,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021c00,0x40021c04,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021c00,0x40021c08,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021c00,0x40021c0c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40021c00,0x40021c14,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40021c00,0x40021c20,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40021c00,0x40021c24,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40022000,0x40022000,GPIO port mode register (GPIOx_MODER) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40022000,0x40022004,GPIO port output type register (GPIOx_OTYPER)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40022000,0x40022008,GPIO port output speed register (GPIOx_OSPEEDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40022000,0x4002200c,GPIO port pull-up/pull-down register (GPIOx_PUPDR)(x = A..I/J/K) ,CR,DR,0,1,NO,
0x40022000,0x40022014,GPIO port output data register (GPIOx_ODR) (x = A..I/J/K)  ,DR,DR,0,1,Yes,
0x40022000,0x40022020,GPIO alternate function low register (GPIOx_AFRL) (x = A..I/J/K)  ,CR,DR,0,1,NO,
0x40022000,0x40022024,8.4.10 GPIO alternate function high register (GPIOx_AFRH),CR,DR,0,1,NO,
0x40023800,0x40023800,RCC clock control register (RCC_CR) ,CR,C&SR,1,1,NO,
0x40023800,0x40023804,6.3.2RCC PLL configuration register (RCC_PLLCFGR)  ,CR,DR,0,1,NO,
0x40023800,0x40023808,RCC clock configuration register (RCC_CFGR)  ,CR,C&SR,1,1,NO,
0x40023800,0x40023810,6.3.5RCC AHB1 peripheral reset register (RCC_AHB1RSTR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023814,RCC AHB2 peripheral reset register (RCC_AHB2RSTR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023820,6.3.8RCC APB1 peripheral reset register (RCC_APB1RSTR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023824,RCC APB2 peripheral reset register (RCC_APB2RSTR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023830,6.3.9RCC AHB1 peripheral clock register (RCC_AHB1ENR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023840,6.3.12RCC APB1 peripheral clock enable register (RCC_APB1ENR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023844,6.3.14RCC APB2 peripheral clock enable register (RCC_APB2ENR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023850,6.3.15(RCC_AHB1LPENR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023860,RCC APB1 peripheral clock enable in low power mode register(RCC_APB1LPENR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023864,RCC APB2 peripheral clock enabled in low power mode register(RCC_APB2LPENR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023870,RCC Backup domain control register (RCC_BDCR)  ,CR,CR,1,1,Yes,
0x40023800,0x40023874,RCC clock control & status register (RCC_CSR)   ,SR,SR,1,1,Yes,HYBRID
0x40023c00,0x40023c00,Flash access control register (FLASH_ACR)for STM32F405xx/07xx and STM32F415xx/17xx  ,CR,DR,0,1,NO,
0x40026000,0x40026008,10.5.2DMA low interrupt flag clear register (DMA_LIFCR)  ,CR,DR,0,1,NO,
0x40026000,0x4002600c,10.5.3DMA high interrupt flag clear register (DMA_HIFCR)  ,CR,DR,0,1,NO,
0x40026000,0x40026010,,,DR,0,1,NO,
0x40026000,0x40026028,,,DR,0,1,NO,
0x40026000,0x40026040,,,DR,0,1,NO,
0x40026000,0x40026058,,,DR,0,1,NO,
0x40026000,0x40026070,,,DR,0,1,NO,
0x40026000,0x40026088,,,DR,0,1,NO,
0x40026000,0x400260a0,,,DR,0,1,NO,
0x40026000,0x400260b8,,,DR,0,1,NO,
0x40026400,0x40026408,10.5.2DMA low interrupt flag clear register (DMA_LIFCR)  ,CR,DR,0,1,NO,
0x40026400,0x4002640c,10.5.3DMA high interrupt flag clear register (DMA_HIFCR)  ,CR,DR,0,1,NO,
0x40026400,0x40026410,,,DR,0,1,NO,
0x40026400,0x40026428,,,DR,0,1,NO,
0x40026400,0x40026440,,,DR,0,1,NO,
0x40026400,0x40026458,,,DR,0,1,NO,
0x40026400,0x40026470,,,CR,1,1,NO,
0x40026400,0x40026474,,,DR,0,1,NO,
0x40026400,0x40026478,,,DR,0,1,NO,
0x40026400,0x4002647c,,,DR,0,1,NO,
0x40026400,0x40026484,,,DR,0,1,NO,
0x40026400,0x40026488,,,DR,0,1,NO,
0x40026400,0x400264a0,,,DR,0,1,NO,
0x40026400,0x400264b8,,,DR,0,1,NO,
