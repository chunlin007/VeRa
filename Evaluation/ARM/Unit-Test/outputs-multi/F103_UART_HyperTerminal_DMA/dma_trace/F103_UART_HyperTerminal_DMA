
(process:1302384): GLib-WARNING **: 02:30:59.535: ../../../../glib/gmem.c:489: custom memory allocation vtable not supported

GNU ARM Eclipse 64-bits QEMU v2.3.50 (qemu-system-gnuarmeclipse).
Board: 'NUCLEO-F103RB' (ST Nucleo Development Board for STM32 F1 series).
Device: 'STM32F103RB' (Cortex-M3 r0p1, MPU), Flash: 128 kB, RAM: 20 kB.
Image: '/projects/VeRa/Evaluation/ARM/Unit-Test/Firmware/Binaries-DICE/F103_UART_HyperTerminal_DMA.elf'.
Command line: (none).
[0, 0]   1-th(total   1-th) 	unassigned mem_r *0x0
[0, 0]   2-th(total   2-th) 	unassigned mem_r *0x4
Load   5572 bytes at 0x08000000-0x080015C3.
Load    120 bytes at 0x080015C4-0x0800163B.
Load      0 bytes at 0x0800163C-0x0800163B.
Cortex-M3 r0p1 core initialised.
QEMU 2.3.50 monitor - type 'help' for more information
(qemu) QEMU 2.3.50 monitor - type 'help' for more information
(qemu) Cortex-M3 r0p1 core reset.
[80001d4, 8000212]   1-th(total   3-th) 	pm_r *0x40021000 gets 0x0, remains CR+SR
[80001d4, 8000212]   1-th(total   1-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[80001d4, 8000212]   2-th(total   4-th) 	pm_r *0x40021004 gets 0x0, remains CR
[80001d4, 8000212]   2-th(total   2-th) 	pm_w *0x40021004 = 0x0, remains CR
[80001d4, 8000212]   3-th(total   5-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[80001d4, 8000212]   3-th(total   3-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[80001d4, 8000212]   4-th(total   6-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[80001d4, 8000212]   4-th(total   4-th) 	pm_w *0x40021000 = 0x1, remains CR+SR
[80001d4, 8000212]   5-th(total   7-th) 	pm_r *0x40021004 gets 0x0, remains CR
[80001d4, 8000212]   5-th(total   5-th) 	pm_w *0x40021004 = 0x0, remains CR
[80001d4, 8000212]   6-th(total   6-th) 	pm_w *0x40021008 = 0x9f0000, remains DR
[8000268, 800027a]   6-th(total   8-th) 	pm_r *0x40022000 gets 0x0, remains CR
[8000268, 800027a]   7-th(total   7-th) 	pm_w *0x40022000 = 0x10, remains CR
PRIGROUP unimplemented
[80008dc, 80008e6]   7-th(total   9-th) 	pm_r *0x40021004 gets 0x0, remains CR
[80008f6, 80008fc]   8-th(total  10-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[8000902, 8000912]   9-th(total  11-th) 	pm_r *0x40021000 gets 0x1, remains CR+SR
[8000902, 8000912]   8-th(total   8-th) 	pm_w *0x40021000 = 0x81, remains CR+SR
[8000a90, 8000a9e]  10-th(total  12-th) 	pm_r *0x40021004 gets 0x0, remains CR
[8000a9e, 8000aa8]  11-th(total  13-th) 	pm_r *0x40021000 gets 0x81, remains CR+SR
[8000a9e, 8000aa8]   9-th(total   9-th) 	pm_w *0x40021000 = 0x81, remains CR+SR
[8000aac, 8000ab4]  12-th(total  14-th) 	pm_r *0x40021000 gets 0x81, remains CR+SR
[8000ac8, 8000ade]  13-th(total  15-th) 	pm_r *0x40021004 gets 0x0, remains CR
[8000ac8, 8000ade]  10-th(total  10-th) 	pm_w *0x40021004 = 0x380000, remains CR
[8000ac8, 8000ade]  14-th(total  16-th) 	pm_r *0x40021000 gets 0x81, remains CR+SR
[8000ac8, 8000ade]  11-th(total  11-th) 	pm_w *0x40021000 = 0x1000081, remains CR+SR
[8000ade, 8000ae8]  15-th(total  17-th) 	pm_r *0x40021000 gets 0x2000000, remains CR+SR
[8000b98, 8000bac]  16-th(total  18-th) 	pm_r *0x40022000 gets 0x10, remains CR
[8000bfe, 8000c00]  17-th(total  19-th) 	pm_r *0x40022000 gets 0x10, remains CR
[8000c00, 8000c12]  12-th(total  12-th) 	pm_w *0x40022000 = 0x12, remains CR
[8000c00, 8000c12]  18-th(total  20-th) 	pm_r *0x40022000 gets 0x12, remains CR
[8000c18, 8000c42]  19-th(total  21-th) 	pm_r *0x40021004 gets 0x380000, remains CR
[8000c18, 8000c42]  13-th(total  13-th) 	pm_w *0x40021004 = 0x380700, remains CR
[8000c18, 8000c42]  20-th(total  22-th) 	pm_r *0x40021004 gets 0x380700, remains CR
[8000c18, 8000c42]  14-th(total  14-th) 	pm_w *0x40021004 = 0x383f00, remains CR
[8000c18, 8000c42]  21-th(total  23-th) 	pm_r *0x40021004 gets 0x383f00, remains CR
[8000c18, 8000c42]  15-th(total  15-th) 	pm_w *0x40021004 = 0x383f00, remains CR
[8000c42, 8000c4c]  22-th(total  24-th) 	pm_r *0x40021000 gets 0x1000081, remains CR+SR
[8000154, 8000184]  23-th(total  25-th) 	pm_r *0x40021018 gets 0x0, remains CR
[8000154, 8000184]  16-th(total  16-th) 	pm_w *0x40021018 = 0x4, remains CR
[8000154, 8000184]  24-th(total  26-th) 	pm_r *0x40021018 gets 0x4, remains CR
[800067c, 80006be]  25-th(total  27-th) 	pm_r *0x40010800 gets 0x0, remains CR
[800067c, 80006be]  17-th(total  17-th) 	pm_w *0x40010800 = 0x300000, remains CR
[80007fa, 80007fe]  18-th(total  18-th) 	pm_w *0x40010810 = 0x200000, remains DR
[80013d8, 8001400]  26-th(total  28-th) 	pm_r *0x40021018 gets 0x4, remains CR
[80013d8, 8001400]  19-th(total  19-th) 	pm_w *0x40021018 = 0x4, remains CR
[80013d8, 8001400]  27-th(total  29-th) 	pm_r *0x40021018 gets 0x4, remains CR
[80013d8, 8001400]  28-th(total  30-th) 	pm_r *0x40021018 gets 0x4, remains CR
[80013d8, 8001400]  20-th(total  20-th) 	pm_w *0x40021018 = 0x4, remains CR
[80013d8, 8001400]  29-th(total  31-th) 	pm_r *0x40021018 gets 0x4, remains CR
[8001400, 8001448]  30-th(total  32-th) 	pm_r *0x40021018 gets 0x4, remains CR
[8001400, 8001448]  21-th(total  21-th) 	pm_w *0x40021018 = 0x4004, remains CR
[8001400, 8001448]  31-th(total  33-th) 	pm_r *0x40021018 gets 0x4004, remains CR
[8001400, 8001448]  32-th(total  34-th) 	pm_r *0x40021014 gets 0x0, remains CR
[8001400, 8001448]  22-th(total  22-th) 	pm_w *0x40021014 = 0x1, remains CR
[8001400, 8001448]  33-th(total  35-th) 	pm_r *0x40021014 gets 0x1, remains CR
[800067c, 80006be]  34-th(total  36-th) 	pm_r *0x40010804 gets 0x0, remains CR
[800067c, 80006be]  23-th(total  23-th) 	pm_w *0x40010804 = 0xb0, remains CR
[8000794, 80007a4]  24-th(total  24-th) 	pm_w *0x40010810 = 0x400, remains DR
[800067c, 80006be]  35-th(total  37-th) 	pm_r *0x40010804 gets 0xb0, remains CR
[800067c, 80006be]  25-th(total  25-th) 	pm_w *0x40010804 = 0x8b0, remains CR
[80003a8, 80003f6]  36-th(total  38-th) 	pm_r *0x40020044 gets 0x0, remains CR
[80003a8, 80003f6]  26-th(total  26-th) 	pm_w *0x40020044 = 0x90, remains CR
[80003a8, 80003f6]  37-th(total  39-th) 	pm_r *0x40020058 gets 0x0, remains CR
[80003a8, 80003f6]  27-th(total  27-th) 	pm_w *0x40020058 = 0x2080, remains CR
[8000ea8, 8000ebe]  38-th(total  40-th) 	pm_r *0x4001380c gets 0x0, remains CR
[8000ea8, 8000ebe]  28-th(total  28-th) 	pm_w *0x4001380c = 0x0, remains CR
[8000d54, 8000d98]  39-th(total  41-th) 	pm_r *0x40013810 gets 0x0, remains CR
[8000d54, 8000d98]  29-th(total  29-th) 	pm_w *0x40013810 = 0x0, remains CR
[8000d54, 8000d98]  40-th(total  42-th) 	pm_r *0x4001380c gets 0x0, remains CR
[8000d54, 8000d98]  30-th(total  30-th) 	pm_w *0x4001380c = 0x60c, remains CR
[8000d54, 8000d98]  41-th(total  43-th) 	pm_r *0x40013814 gets 0x0, remains CR
[8000d54, 8000d98]  31-th(total  31-th) 	pm_w *0x40013814 = 0x0, remains CR
[8000d18, 8000d2c]  42-th(total  44-th) 	pm_r *0x40021004 gets 0x383f00, remains CR
[8000d18, 8000d2c]  43-th(total  45-th) 	pm_r *0x40021004 gets 0x383f00, remains CR
[8000d18, 8000d2c]  44-th(total  46-th) 	pm_r *0x40021004 gets 0x383f00, remains CR
[8000d18, 8000d2c]  45-th(total  47-th) 	pm_r *0x40021004 gets 0x383f00, remains CR
[8000d18, 8000d2c]  46-th(total  48-th) 	pm_r *0x40021004 gets 0x383f00, remains CR
[8000dfa, 8000e28]  32-th(total  32-th) 	pm_w *0x40013808 = 0x1d5, remains DR
[8000ebe, 8000ee8]  47-th(total  49-th) 	pm_r *0x40013810 gets 0x0, remains CR
[8000ebe, 8000ee8]  33-th(total  33-th) 	pm_w *0x40013810 = 0x0, remains CR
[8000ebe, 8000ee8]  48-th(total  50-th) 	pm_r *0x40013814 gets 0x0, remains CR
[8000ebe, 8000ee8]  34-th(total  34-th) 	pm_w *0x40013814 = 0x0, remains CR
[8000ebe, 8000ee8]  49-th(total  51-th) 	pm_r *0x4001380c gets 0x60c, remains CR
[8000ebe, 8000ee8]  35-th(total  35-th) 	pm_w *0x4001380c = 0x260c, remains CR
[8000424, 8000452]  50-th(total  52-th) 	pm_r *0x40020044 gets 0x90, remains CR
[8000424, 8000452]  36-th(total  36-th) 	pm_w *0x40020044 = 0x90, remains CR
[8000424, 8000452]  37-th(total  37-th) 	pm_w *0x40020004 = 0x1000, remains DR
[8000424, 8000452]  38-th(total  38-th) 	pm_w *0x40020048 = 0x61, remains DR
[8000424, 8000452]  39-th(total  39-th) 	pm_w *0x4002004c = 0x40013804, remains DR
Potential DMA Descriptor V1: base *0x40020000 p_A:*0x40020050->*0x20000014 
DMA Descriptor pair V2: *0x40020000 p_A:*0x4002004c->*0x40013804 p_B:*0x40020050->*0x20000014 
[8000424, 8000452]  40-th(total  40-th) 	pm_w *0x40020050 = 0x20000014, remains DR
[8000452, 8000466]  51-th(total  53-th) 	pm_r *0x40020044 gets 0x90, remains CR
[8000452, 8000466]  41-th(total  41-th) 	pm_w *0x40020044 = 0x9e, remains CR
[8000452, 8000466]  52-th(total  54-th) 	pm_r *0x40020044 gets 0x9e, remains CR
[8000452, 8000466]  42-th(total  42-th) 	pm_w *0x40020044 = 0x9f, remains CR
[8000f34, 8000f4c]  43-th(total  43-th) 	pm_w *0x40013800 = 0xffffffbf, remains DR
[8000f34, 8000f4c]  53-th(total  55-th) 	pm_r *0x40013814 gets 0x0, remains CR
[8000f34, 8000f4c]  44-th(total  44-th) 	pm_w *0x40013814 = 0x80, remains CR
[8000424, 8000452]  54-th(total  56-th) 	pm_r *0x40020058 gets 0x2080, remains CR
[8000424, 8000452]  45-th(total  45-th) 	pm_w *0x40020058 = 0x2080, remains CR
[8000424, 8000452]  46-th(total  46-th) 	pm_w *0x40020004 = 0x10000, remains DR
[8000424, 8000452]  47-th(total  47-th) 	pm_w *0x4002005c = 0xa, remains DR
[8000424, 8000452]  48-th(total  48-th) 	pm_w *0x40020060 = 0x40013804, remains DR
Potential DMA Descriptor V1: base *0x40020000 p_A:*0x40020064->*0x200001e8 
DMA Descriptor pair V2: *0x40020000 p_A:*0x40020060->*0x40013804 p_B:*0x40020064->*0x200001e8 
[8000424, 8000452]  49-th(total  49-th) 	pm_w *0x40020064 = 0x200001e8, remains DR
[8000452, 8000466]  55-th(total  57-th) 	pm_r *0x40020058 gets 0x2080, remains CR
[8000452, 8000466]  50-th(total  50-th) 	pm_w *0x40020058 = 0x208e, remains CR
[8000452, 8000466]  56-th(total  58-th) 	pm_r *0x40020058 gets 0x208e, remains CR
[8000452, 8000466]  51-th(total  51-th) 	pm_w *0x40020058 = 0x208f, remains CR
[8000fac, 8000fdc]  57-th(total  59-th) 	pm_r *0x40013800 gets 0x0, remains DR
[8000fac, 8000fdc]  58-th(total  60-th) 	pm_r *0x40013804 gets 0x0, remains DR
[8000fac, 8000fdc]  59-th(total  61-th) 	pm_r *0x4001380c gets 0x260c, remains CR
[8000fac, 8000fdc]  52-th(total  52-th) 	pm_w *0x4001380c = 0x270c, remains CR
[8000fac, 8000fdc]  60-th(total  62-th) 	pm_r *0x40013814 gets 0x80, remains CR
[8000fac, 8000fdc]  53-th(total  53-th) 	pm_w *0x40013814 = 0x81, remains CR
[8000fac, 8000fdc]  61-th(total  63-th) 	pm_r *0x40013814 gets 0x81, remains CR
[8000fac, 8000fdc]  54-th(total  54-th) 	pm_w *0x40013814 = 0xc1, remains CR
Taking exception 5 [IRQ]
	bbl_cnt 30000: Acknowledged IRQ -1
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 30002: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 60000: Acknowledged IRQ 14
[8000510, 8000524]  62-th(total  64-th) 	pm_r *0x40020000 gets 0x2000, remains SR
[8000510, 8000524]  63-th(total  65-th) 	pm_r *0x40020044 gets 0x9f, remains CR
[8000596, 800059c]  64-th(total  66-th) 	pm_r *0x40020044 gets 0x9f, remains CR
[800059c, 80005b0]  65-th(total  67-th) 	pm_r *0x40020044 gets 0x9f, remains CR
[800059c, 80005b0]  55-th(total  55-th) 	pm_w *0x40020044 = 0x95, remains CR
[80005d6, 80005e4]  56-th(total  56-th) 	pm_w *0x40020004 = 0x2000, remains DR
[8000ff0, 8000ffe]  66-th(total  68-th) 	pm_r *0x40020044 gets 0x95, remains CR
[8001000, 8001014]  67-th(total  69-th) 	pm_r *0x40013814 gets 0xc1, remains CR
[8001000, 8001014]  57-th(total  57-th) 	pm_w *0x40013814 = 0x41, remains CR
[8001000, 8001014]  68-th(total  70-th) 	pm_r *0x4001380c gets 0x270c, remains CR
[8001000, 8001014]  58-th(total  58-th) 	pm_w *0x4001380c = 0x274c, remains CR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 60016: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 90000: Acknowledged IRQ 15
[8000510, 8000524]  69-th(total  71-th) 	pm_r *0x40020000 gets 0x20000, remains SR
[8000510, 8000524]  70-th(total  72-th) 	pm_r *0x40020058 gets 0x208f, remains CR
[8000596, 800059c]  71-th(total  73-th) 	pm_r *0x40020058 gets 0x208f, remains CR
[800059c, 80005b0]  72-th(total  74-th) 	pm_r *0x40020058 gets 0x208f, remains CR
[800059c, 80005b0]  59-th(total  59-th) 	pm_w *0x40020058 = 0x2085, remains CR
[80005d6, 80005e4]  60-th(total  60-th) 	pm_w *0x40020004 = 0x20000, remains DR
[8001028, 8001036]  73-th(total  75-th) 	pm_r *0x40020058 gets 0x2085, remains CR
[8001036, 800105e]  74-th(total  76-th) 	pm_r *0x4001380c gets 0x274c, remains CR
[8001036, 800105e]  61-th(total  61-th) 	pm_w *0x4001380c = 0x264c, remains CR
[8001036, 800105e]  75-th(total  77-th) 	pm_r *0x40013814 gets 0x41, remains CR
[8001036, 800105e]  62-th(total  62-th) 	pm_w *0x40013814 = 0x40, remains CR
[8001036, 800105e]  76-th(total  78-th) 	pm_r *0x40013814 gets 0x40, remains CR
[8001036, 800105e]  63-th(total  63-th) 	pm_w *0x40013814 = 0x0, remains CR
[80007fa, 80007fe]  64-th(total  64-th) 	pm_w *0x40010810 = 0x20, remains DR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 90021: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 120000: Acknowledged IRQ 37
[8001130, 8001140]  77-th(total  79-th) 	pm_r *0x40013800 gets 0x0, remains DR
[8001130, 8001140]  78-th(total  80-th) 	pm_r *0x4001380c gets 0x264c, remains CR
[8001130, 8001140]  79-th(total  81-th) 	pm_r *0x40013814 gets 0x0, remains CR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 120006: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 150000: Acknowledged IRQ -1
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 150002: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 180000: Acknowledged IRQ 14
[8000510, 8000524]  80-th(total  82-th) 	pm_r *0x40020000 gets 0x4000, remains SR
[8000510, 8000524]  81-th(total  83-th) 	pm_r *0x40020044 gets 0x95, remains CR
[8000528, 800053c]  82-th(total  84-th) 	pm_r *0x40020044 gets 0x95, remains CR
[8000528, 800053c]  83-th(total  85-th) 	pm_r *0x40020044 gets 0x95, remains CR
[8000528, 800053c]  65-th(total  65-th) 	pm_w *0x40020044 = 0x91, remains CR
[8000562, 800056c]  66-th(total  66-th) 	pm_w *0x40020004 = 0x4000, remains DR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 180013: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 210000: Acknowledged IRQ 15
[8000510, 8000524]  84-th(total  86-th) 	pm_r *0x40020000 gets 0x40000, remains SR
[8000510, 8000524]  85-th(total  87-th) 	pm_r *0x40020058 gets 0x2085, remains CR
[8000528, 800053c]  86-th(total  88-th) 	pm_r *0x40020058 gets 0x2085, remains CR
[8000528, 800053c]  87-th(total  89-th) 	pm_r *0x40020058 gets 0x2085, remains CR
[8000528, 800053c]  67-th(total  67-th) 	pm_w *0x40020058 = 0x2081, remains CR
[8000562, 800056c]  68-th(total  68-th) 	pm_w *0x40020004 = 0x40000, remains DR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 210014: EXCP/ISR exits
Taking exception 5 [IRQ]
	bbl_cnt 240000: Acknowledged IRQ 37
[8001130, 8001140]  88-th(total  90-th) 	pm_r *0x40013800 gets 0x0, remains DR
[8001130, 8001140]  89-th(total  91-th) 	pm_r *0x4001380c gets 0x264c, remains CR
[8001130, 8001140]  90-th(total  92-th) 	pm_r *0x40013814 gets 0x0, remains CR
Taking exception 8 [QEMU v7M exception exit]
	bbl_cnt 240006: EXCP/ISR exits
stage_termination

